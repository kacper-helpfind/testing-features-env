{
  "openapi": "3.1.0",
  "info": {
    "title": "Laravel",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://api.crm.laracraft.pl/api"
    }
  ],
  "paths": {
    "/accounts/get/count": {
      "get": {
        "operationId": "get.count",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "pesel",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "nip",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/accounts/{account}": {
      "delete": {
        "operationId": "accounts.destroy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "description": "The account ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "get": {
        "operationId": "accounts.show",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "description": "The account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowAccountResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "accounts.update",
        "description": "\u26a0\ufe0fCannot generate request documentation: method_exists(): Argument #1 ($object_or_class) must be of type object|string, array given",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "description": "The account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/accounts/{account}/restore": {
      "post": {
        "operationId": "account.restore",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "description": "The account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/accounts/{account}/get/history": {
      "get": {
        "operationId": "account.history",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/accounts/{account}/get/related/{related}": {
      "get": {
        "operationId": "account.related",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "description": "The account ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "related",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "operationId": "accounts.index",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "pesel",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "nip",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "accounts.store",
        "description": "\u26a0\ufe0fCannot generate request documentation: method_exists(): Argument #1 ($object_or_class) must be of type object|string, array given",
        "tags": ["Account"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "operationId": "addresses.index",
        "tags": ["Address"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "addresses.store",
        "tags": ["Address"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/addresses/{address}": {
      "get": {
        "operationId": "addresses.show",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "addresses.update",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "addresses.destroy",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/addresses/get/postal-codes": {
      "get": {
        "operationId": "get.postal-codes",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostalCodeResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/addresses/get/cities": {
      "get": {
        "operationId": "get.cities",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "city_id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/addresses/get/streets": {
      "get": {
        "operationId": "get.streets",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "city_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StreetResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/addresses/get/tax-offices": {
      "get": {
        "operationId": "get.tax-offices",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "office_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxAccountResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/addresses/get/countries": {
      "get": {
        "operationId": "get.countries",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/addresses/get/provinces": {
      "get": {
        "operationId": "get.provinces",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProvinceResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/agreements": {
      "get": {
        "operationId": "agreement.index",
        "tags": ["Agreement"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "content",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "companies",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "agreement.create",
        "tags": ["Agreement"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAgreementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/agreements/count": {
      "get": {
        "operationId": "agreement.count",
        "tags": ["Agreement"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "content",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "companies",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/agreements/{agreement}": {
      "get": {
        "operationId": "agreement.show",
        "tags": ["Agreement"],
        "parameters": [
          {
            "name": "agreement",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowAgreementResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "agreement.destroy",
        "tags": ["Agreement"],
        "parameters": [
          {
            "name": "agreement",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "agreement.update",
        "tags": ["Agreement"],
        "parameters": [
          {
            "name": "agreement",
            "in": "path",
            "required": true,
            "description": "The agreement ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAgreementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analysis-surveys/count": {
      "get": {
        "operationId": "analysis-surveys.count",
        "tags": ["AnalysisSurvey"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analysis-surveys": {
      "get": {
        "operationId": "analysis-surveys.index",
        "tags": ["AnalysisSurvey"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "analysis-surveys.store",
        "tags": ["AnalysisSurvey"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisSurveyStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analysis-surveys/{analysisSurvey}": {
      "get": {
        "operationId": "analysis-surveys.show",
        "tags": ["AnalysisSurvey"],
        "parameters": [
          {
            "name": "analysisSurvey",
            "in": "path",
            "required": true,
            "description": "The analysis survey ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisSurveyResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "analysis-surveys.destroy",
        "tags": ["AnalysisSurvey"],
        "parameters": [
          {
            "name": "analysisSurvey",
            "in": "path",
            "required": true,
            "description": "The analysis survey ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analysis-surveys/{analysis_survey}": {
      "put": {
        "operationId": "analysis-surveys.update",
        "tags": ["AnalysisSurvey"],
        "parameters": [
          {
            "name": "analysis_survey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisSurveyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analyzers": {
      "get": {
        "operationId": "analyzers.index",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "company",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "analyzer_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "analyzers.store",
        "tags": ["Analyzer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAnalyzerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analyzers/count": {
      "get": {
        "operationId": "analyzers.count",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "company",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "analyzer_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analyzers/{analyzer}": {
      "get": {
        "operationId": "analyzers.show",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "analyzer",
            "in": "path",
            "required": true,
            "description": "The analyzer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowAnalyzerResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "analyzers.update",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "analyzer",
            "in": "path",
            "required": true,
            "description": "The analyzer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAnalyzerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "analyzers.destroy",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "analyzer",
            "in": "path",
            "required": true,
            "description": "The analyzer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/analyzers/{analyzer}/users": {
      "get": {
        "operationId": "analyzers.users",
        "tags": ["Analyzer"],
        "parameters": [
          {
            "name": "analyzer",
            "in": "path",
            "required": true,
            "description": "The analyzer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAnalyzerResource"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/{attachment}/send-to-conversion": {
      "get": {
        "operationId": "attachments.",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/{attachment}/to-print-details": {
      "get": {
        "operationId": "attachments.get-to-print-details",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentToPrintDetailsResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/{attachment}/{scope}/{hash}": {
      "put": {
        "operationId": "attachments.update",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "attachments.destroy",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/download/{hash}": {
      "get": {
        "operationId": "attachments.download-url",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/preview/{hash}": {
      "get": {
        "operationId": "attachments.preview-url",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/{linkable}/{linkableId}": {
      "get": {
        "operationId": "attachments.get-linkable-attachments",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "linkable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `LinkableAttachmentResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkableAttachmentResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/attachments/batch/{scope}/{hash}": {
      "post": {
        "operationId": "attachments.batch",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/mass-delete/{scope}/{hash}": {
      "post": {
        "operationId": "attachments.mass-delete",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MassDeleteAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachments/{attachment}/{action}/{scope}/{hash}": {
      "post": {
        "operationId": "attachments.action",
        "tags": ["Attachment"],
        "parameters": [
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachment-directory": {
      "post": {
        "operationId": "attachment-directory.store",
        "tags": ["AttachmentDirectory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAttachmentDirectoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachment-directory/{attachmentDirectory}": {
      "delete": {
        "operationId": "attachment-directory.destroy",
        "tags": ["AttachmentDirectory"],
        "parameters": [
          {
            "name": "attachmentDirectory",
            "in": "path",
            "required": true,
            "description": "The attachment directory ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/attachment-directory/move-attachments/{scope}/{hash}": {
      "post": {
        "operationId": "attachment-directory.move-attachments",
        "tags": ["AttachmentDirectory"],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveAttachmentDirectoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachment-types": {
      "get": {
        "operationId": "attachmentType.index",
        "tags": ["AttachmentType"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "english_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "ocr",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "enum": ["0", "1"]
            }
          },
          {
            "name": "projects",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "attachmentType.store",
        "tags": ["AttachmentType"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAttachmentTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachment-types/count": {
      "get": {
        "operationId": "attachmentType.count",
        "tags": ["AttachmentType"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "english_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "ocr",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "enum": ["0", "1"]
            }
          },
          {
            "name": "projects",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/attachment-types/{attachmentType}": {
      "get": {
        "operationId": "attachmentType.show",
        "tags": ["AttachmentType"],
        "parameters": [
          {
            "name": "attachmentType",
            "in": "path",
            "required": true,
            "description": "The attachment type ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentTypeIndexResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "attachmentType.update",
        "tags": ["AttachmentType"],
        "parameters": [
          {
            "name": "attachmentType",
            "in": "path",
            "required": true,
            "description": "The attachment type ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreAttachmentTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "attachmentType.destroy",
        "tags": ["AttachmentType"],
        "parameters": [
          {
            "name": "attachmentType",
            "in": "path",
            "required": true,
            "description": "The attachment type ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/blacklist": {
      "get": {
        "operationId": "blacklist.index",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "request_delete_data",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/blacklist/get/count": {
      "get": {
        "operationId": "blacklist.count",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "request_delete_data",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/blacklist/{type}": {
      "post": {
        "operationId": "blacklist.store",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreBlacklistRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlacklistShowResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/blacklist/{id}/{type}": {
      "put": {
        "operationId": "blacklist.update",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlacklistRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlacklistShowResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "blacklist.delete",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "get": {
        "operationId": "blacklist.show",
        "tags": ["Blacklist"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlacklistShowResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/cache": {
      "get": {
        "operationId": "cache.index",
        "tags": ["Cache"],
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "minLength": 3
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "string"
                    }
                  },
                  "required": ["keys"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "cache.destroy",
        "tags": ["Cache"],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/cache/all": {
      "delete": {
        "operationId": "cache.destroyAll",
        "tags": ["Cache"],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaigns/count": {
      "get": {
        "operationId": "campaigns.count",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CampaignTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaigns": {
      "get": {
        "operationId": "campaign.index",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CampaignTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "campaign.store",
        "tags": ["Campaign"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaigns/{campaign}": {
      "get": {
        "operationId": "campaign.show",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "campaign",
            "in": "path",
            "required": true,
            "description": "The campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "campaign.update",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "campaign",
            "in": "path",
            "required": true,
            "description": "The campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "campaign.destroy",
        "tags": ["Campaign"],
        "parameters": [
          {
            "name": "campaign",
            "in": "path",
            "required": true,
            "description": "The campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaign_groups": {
      "get": {
        "operationId": "campaignGroup.index",
        "tags": ["CampaignGroup"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "campaigns",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "hex_color",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "campaignGroup.store",
        "tags": ["CampaignGroup"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCampaignGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaign_groups/count": {
      "get": {
        "operationId": "campaignGroup.count",
        "tags": ["CampaignGroup"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "campaigns",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "hex_color",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/campaign_groups/{campaignGroup}": {
      "get": {
        "operationId": "campaignGroup.show",
        "tags": ["CampaignGroup"],
        "parameters": [
          {
            "name": "campaignGroup",
            "in": "path",
            "required": true,
            "description": "The campaign group ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowCampaignGroupResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "campaignGroup.update",
        "description": "\u26a0\ufe0fCannot generate request documentation: Attempt to read property \"id\" on null",
        "tags": ["CampaignGroup"],
        "parameters": [
          {
            "name": "campaignGroup",
            "in": "path",
            "required": true,
            "description": "The campaign group ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "campaignGroup.destroy",
        "tags": ["CampaignGroup"],
        "parameters": [
          {
            "name": "campaignGroup",
            "in": "path",
            "required": true,
            "description": "The campaign group ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/car-makes": {
      "get": {
        "operationId": "carMake.index",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "carMake.store",
        "tags": ["CarMake"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreCarMakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/car-makes/count": {
      "get": {
        "operationId": "carMake.count",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/car-makes/{carMake}": {
      "get": {
        "operationId": "carMake.show",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "carMake",
            "in": "path",
            "required": true,
            "description": "The car make ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowCarMakeResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "carMake.destroy",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "carMake",
            "in": "path",
            "required": true,
            "description": "The car make ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "carMake.update",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "carMake",
            "in": "path",
            "required": true,
            "description": "The car make ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreCarMakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/car-makes/{carMake}/upload": {
      "post": {
        "operationId": "carMake.upload",
        "tags": ["CarMake"],
        "parameters": [
          {
            "name": "carMake",
            "in": "path",
            "required": true,
            "description": "The car make ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StoreCarMakeLogoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "operationId": "category.index",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "category.store",
        "tags": ["Category"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string",
                      "example": "OK"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/categories/count": {
      "get": {
        "operationId": "category.count",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/categories/{category}": {
      "get": {
        "operationId": "category.show",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexCategoryResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "category.update",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string",
                      "example": "OK"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "category.destroy",
        "tags": ["Category"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string",
                      "example": "OK"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/cc/campaigns/count": {
      "get": {
        "operationId": "ccCampaign.count",
        "tags": ["CcCampaign"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/campaigns": {
      "get": {
        "operationId": "ccCampaign.index",
        "tags": ["CcCampaign"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "ccCampaign.store",
        "tags": ["CcCampaign"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCcCampaignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcCampaignGetResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/campaigns/{ccCampaign}": {
      "get": {
        "operationId": "ccCampaign.show",
        "tags": ["CcCampaign"],
        "parameters": [
          {
            "name": "ccCampaign",
            "in": "path",
            "required": true,
            "description": "The cc campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcCampaignGetResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "ccCampaign.update",
        "tags": ["CcCampaign"],
        "parameters": [
          {
            "name": "ccCampaign",
            "in": "path",
            "required": true,
            "description": "The cc campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCcCampaignRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcCampaignGetResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "ccCampaign.destroy",
        "tags": ["CcCampaign"],
        "parameters": [
          {
            "name": "ccCampaign",
            "in": "path",
            "required": true,
            "description": "The cc campaign ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/cc/statuses/count": {
      "get": {
        "operationId": "ccStatus.count",
        "tags": ["CcStatus"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "cc_campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/statuses": {
      "get": {
        "operationId": "statuses.index",
        "tags": ["CcStatus"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "cc_campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "type_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "statuses.store",
        "tags": ["CcStatus"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCcStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcStatusResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/statuses/{ccCampaignStatus}": {
      "get": {
        "operationId": "statuses.show",
        "tags": ["CcStatus"],
        "parameters": [
          {
            "name": "ccCampaignStatus",
            "in": "path",
            "required": true,
            "description": "The cc campaign status ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcStatusResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "statuses.update",
        "tags": ["CcStatus"],
        "parameters": [
          {
            "name": "ccCampaignStatus",
            "in": "path",
            "required": true,
            "description": "The cc campaign status ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCcStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcStatusResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "statuses.destroy",
        "tags": ["CcStatus"],
        "parameters": [
          {
            "name": "ccCampaignStatus",
            "in": "path",
            "required": true,
            "description": "The cc campaign status ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/cc/triggers/count": {
      "get": {
        "operationId": "ccTrigger.count",
        "tags": ["CcTrigger"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "sql_query",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/triggers": {
      "get": {
        "operationId": "triggers.index",
        "tags": ["CcTrigger"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "sql_query",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "triggers.store",
        "tags": ["CcTrigger"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCcTriggerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcTriggerIndexResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/cc/triggers/{ccTrigger}": {
      "get": {
        "operationId": "triggers.show",
        "tags": ["CcTrigger"],
        "parameters": [
          {
            "name": "ccTrigger",
            "in": "path",
            "required": true,
            "description": "The cc trigger ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcTriggerIndexResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "triggers.update",
        "tags": ["CcTrigger"],
        "parameters": [
          {
            "name": "ccTrigger",
            "in": "path",
            "required": true,
            "description": "The cc trigger ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCcTriggerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CcTriggerIndexResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "triggers.destroy",
        "tags": ["CcTrigger"],
        "parameters": [
          {
            "name": "ccTrigger",
            "in": "path",
            "required": true,
            "description": "The cc trigger ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/cities": {
      "get": {
        "operationId": "cities.index",
        "tags": ["City"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "cities.store",
        "tags": ["City"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/cities/{city}": {
      "get": {
        "operationId": "cities.show",
        "tags": ["City"],
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "description": "The city ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "cities.update",
        "tags": ["City"],
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "description": "The city ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "cities.destroy",
        "tags": ["City"],
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "required": true,
            "description": "The city ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/for-information-portals": {
      "get": {
        "operationId": "claims.",
        "tags": ["Claim"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimsForInformationPortalsResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claim-wire-transfers/sortable-columns": {
      "get": {
        "operationId": "claim-wire-transfers.sortable-columns",
        "tags": ["ClaimWireTransfer"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claim-wire-transfers": {
      "get": {
        "operationId": "claim-wire-transfers.index",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claim_wire_transfer_status",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "claim_wire_transfer_status_created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "transfer_sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "transfer_accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "bank_account_number_to",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "bank_account_number_from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_amount",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/claim-wire-transfers/claims": {
      "get": {
        "operationId": "claim-wire-transfers.getClaims",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "accident_nr_damage",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "files_signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "claim_application_value",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "contract_number",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimListResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/claim-wire-transfers/count": {
      "get": {
        "operationId": "claim-wire-transfers.count",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "claim_wire_transfer_status",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "claim_wire_transfer_status_created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "transfer_sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "transfer_accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "bank_account_number_to",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "bank_account_number_from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "transfer_amount",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/claim-wire-transfers/{claimWireTransfer}": {
      "get": {
        "operationId": "claim-wire-transfers.show",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "claimWireTransfer",
            "in": "path",
            "required": true,
            "description": "The claim wire transfer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowClaimWireTransferResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claim-wire-transfers/delete": {
      "delete": {
        "operationId": "claim-wire-transfers.destroy",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claim-wire-transfers/claim-value/{claimValue}": {
      "get": {
        "operationId": "claim-wire-transfers.showByClaimValue",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "claimValue",
            "in": "path",
            "required": true,
            "description": "The claim value ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimValueCwtResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claim-wire-transfers/{claimWireTransfer}/dispatch": {
      "post": {
        "operationId": "claim-wire-transfers.dispatchClaimWireTransfer",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "claimWireTransfer",
            "in": "path",
            "required": true,
            "description": "The claim wire transfer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DispatchClaimWireTransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claim-wire-transfers/import-csv": {
      "post": {
        "operationId": "claim-wire-transfers.importCsv",
        "tags": ["ClaimWireTransfer"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CwtImportCsvRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claim-wire-transfers/claims-values-by-claim/{claim}": {
      "get": {
        "operationId": "claim-wire-transfers.getClaimValuesByClaim",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "claim",
            "in": "path",
            "required": true,
            "description": "The claim ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claim-wire-transfers/rollback/{claimWireTransfer}": {
      "post": {
        "operationId": "claim-wire-transfers.rollback",
        "tags": ["ClaimWireTransfer"],
        "parameters": [
          {
            "name": "claimWireTransfer",
            "in": "path",
            "required": true,
            "description": "The claim wire transfer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/communes": {
      "get": {
        "operationId": "communes.index",
        "tags": ["Commune"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "communes.store",
        "tags": ["Commune"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommuneStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communes/{commune}": {
      "get": {
        "operationId": "communes.show",
        "tags": ["Commune"],
        "parameters": [
          {
            "name": "commune",
            "in": "path",
            "required": true,
            "description": "The commune ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "communes.update",
        "tags": ["Commune"],
        "parameters": [
          {
            "name": "commune",
            "in": "path",
            "required": true,
            "description": "The commune ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommuneUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "communes.destroy",
        "tags": ["Commune"],
        "parameters": [
          {
            "name": "commune",
            "in": "path",
            "required": true,
            "description": "The commune ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communicates": {
      "get": {
        "operationId": "communicate.index",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AccountContactTypeEnum"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "content",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "show_mass_communicates",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "marketing_automation_enabled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "service_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "communicate.store",
        "tags": ["Communicate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicateStoreUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicateResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communicates/count": {
      "get": {
        "operationId": "communicate.index-count",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AccountContactTypeEnum"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "content",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "show_mass_communicates",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "marketing_automation_enabled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "project_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "service_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communicates/{communicate}": {
      "get": {
        "operationId": "communicate.show",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "communicate",
            "in": "path",
            "required": true,
            "description": "The communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "communicate.update",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "communicate",
            "in": "path",
            "required": true,
            "description": "The communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicateStoreUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "communicate.destroy",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "communicate",
            "in": "path",
            "required": true,
            "description": "The communicate ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communicates/{communicate}/attachments/{attachment}": {
      "delete": {
        "operationId": "communicate.destroy-attachment",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "communicate",
            "in": "path",
            "required": true,
            "description": "The communicate ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/communicates/{communicate}/send/test": {
      "post": {
        "operationId": "communicate.sendTest",
        "tags": ["Communicate"],
        "parameters": [
          {
            "name": "communicate",
            "in": "path",
            "required": true,
            "description": "The communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSendCommunicateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/companies/count": {
      "get": {
        "operationId": "companies.count",
        "tags": ["Company"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "operationId": "companies.index",
        "tags": ["Company"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "companies.store",
        "tags": ["Company"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/companies/{company}": {
      "get": {
        "operationId": "companies.show",
        "tags": ["Company"],
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "required": true,
            "description": "The company ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "companies.update",
        "tags": ["Company"],
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "required": true,
            "description": "The company ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "companies.destroy",
        "tags": ["Company"],
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "required": true,
            "description": "The company ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/companies/get/companies": {
      "get": {
        "operationId": "get.companies",
        "tags": ["CompanyAccount"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyAccountResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/consultants": {
      "get": {
        "operationId": "consultantsindex",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email_sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email_from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "consultantsstore",
        "tags": ["Consultant"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreConsultantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultantShowResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/consultants/count": {
      "get": {
        "operationId": "consultantscount",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email_sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "email_from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/consultants/{consultant}": {
      "get": {
        "operationId": "consultantsshow",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "consultant",
            "in": "path",
            "required": true,
            "description": "The consultant ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultantShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "consultantsupdate",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "consultant",
            "in": "path",
            "required": true,
            "description": "The consultant ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConsultantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsultantShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "consultantsdestroy",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "consultant",
            "in": "path",
            "required": true,
            "description": "The consultant ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/consultants/{consultant}/upload/logo": {
      "post": {
        "operationId": "consultantsupload-logo",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "consultant",
            "in": "path",
            "required": true,
            "description": "The consultant ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "done": {
                          "type": "string"
                        }
                      },
                      "required": ["done"]
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/consultants/{consultant}/upload/avatar": {
      "post": {
        "operationId": "consultantsupload-avatar",
        "tags": ["Consultant"],
        "parameters": [
          {
            "name": "consultant",
            "in": "path",
            "required": true,
            "description": "The consultant ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "done": {
                          "type": "string"
                        }
                      },
                      "required": ["done"]
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "operationId": "contract.index",
        "tags": ["Contract"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "is_google_contract",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "analyzers",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "contract.store",
        "tags": ["Contract"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractStoreUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/contracts/count": {
      "get": {
        "operationId": "contract.count",
        "tags": ["Contract"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "group_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "is_google_contract",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "analyzers",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/contracts/{contract}": {
      "get": {
        "operationId": "contract.show",
        "tags": ["Contract"],
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "required": true,
            "description": "The contract ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "contract.update",
        "tags": ["Contract"],
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "required": true,
            "description": "The contract ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractStoreUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "contract.destroy",
        "tags": ["Contract"],
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "required": true,
            "description": "The contract ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/counties": {
      "get": {
        "operationId": "counties.index",
        "tags": ["County"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "counties.store",
        "tags": ["County"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountyStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/counties/{county}": {
      "get": {
        "operationId": "counties.show",
        "tags": ["County"],
        "parameters": [
          {
            "name": "county",
            "in": "path",
            "required": true,
            "description": "The county ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "counties.update",
        "tags": ["County"],
        "parameters": [
          {
            "name": "county",
            "in": "path",
            "required": true,
            "description": "The county ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "counties.destroy",
        "tags": ["County"],
        "parameters": [
          {
            "name": "county",
            "in": "path",
            "required": true,
            "description": "The county ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/app/csrf-cookie": {
      "get": {
        "operationId": "sanctum.csrf-cookie",
        "summary": "Return an empty response simply to trigger the storage of the CSRF cookie in the browser",
        "tags": ["CsrfCookie"],
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/focus/redirect/lead/{leadId}": {
      "get": {
        "operationId": "ctiPump.redirectToLead",
        "tags": ["CtiPump"],
        "parameters": [
          {
            "name": "leadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/focus/redirect/{ctiPumpQueue}": {
      "get": {
        "operationId": "ctiPump.redirectToUrl",
        "tags": ["CtiPump"],
        "parameters": [
          {
            "name": "ctiPumpQueue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/departments/courts/to-select": {
      "get": {
        "operationId": "department.courtsToSelect",
        "tags": ["Department"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentToSelectResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/docusign/getkey": {
      "get": {
        "operationId": "docuSign.getKey",
        "tags": ["DocuSign"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": ["url"]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/docusign/callback": {
      "get": {
        "operationId": "docuSign.callback",
        "tags": ["DocuSign"],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/email-logs": {
      "get": {
        "operationId": "emailLog.index",
        "tags": ["EmailLog"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "receivers",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/email-logs/get/count": {
      "get": {
        "operationId": "emailLog.count",
        "tags": ["EmailLog"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "receivers",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/ranking-company-categories": {
      "get": {
        "operationId": "enum.getRankingCompanyCategories",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/printer-labels-users": {
      "get": {
        "operationId": "enum.printerLabelUsers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/filter-template-routes": {
      "get": {
        "operationId": "enum.filterTemplateRoutes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterTemplateRouteResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/projects": {
      "get": {
        "operationId": "enum.getProjects",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/cc_campaign_statuses": {
      "get": {
        "operationId": "enum.getCcCampaignStatus",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/trigger_classes": {
      "get": {
        "operationId": "enum.getTriggerClasses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/portal_delivery_statuses": {
      "get": {
        "operationId": "enum.getPortalDeliveryStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/todo-task-statuses": {
      "get": {
        "operationId": "enum.getTodoTaskStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/services": {
      "get": {
        "operationId": "enum.getServices",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/cost_types": {
      "get": {
        "operationId": "enum.getCostTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/cancellation_types": {
      "get": {
        "operationId": "enum.getCancellationTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/analyzers": {
      "get": {
        "operationId": "enum.getAnalyzers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/products": {
      "get": {
        "operationId": "enum.getProducts",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/cc_campaign_status_types": {
      "get": {
        "operationId": "enum.getCcCampaignStatusType",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/cti_campaigns": {
      "get": {
        "operationId": "enum.getCtiCampaigns",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/cc_campaigns": {
      "get": {
        "operationId": "enum.getCcCampaigns",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/invoices_payment_statuses": {
      "get": {
        "operationId": "enum.getInvoicePaymentStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/cost_subtypes": {
      "get": {
        "operationId": "enum.getCostSubtypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/exported_batch": {
      "get": {
        "operationId": "enum.getExportedBatches",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/label_types": {
      "get": {
        "operationId": "enum.getLabelTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/sites": {
      "get": {
        "operationId": "enum.sites",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectSiteEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/consultants": {
      "get": {
        "operationId": "enum.getConsultants",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumConsultantResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/email-status": {
      "get": {
        "operationId": "enum.emailStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/roles": {
      "get": {
        "operationId": "enum.roles",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/crm-users": {
      "get": {
        "operationId": "enum.users",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/all-users": {
      "get": {
        "operationId": "enum.allUsers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/teams": {
      "get": {
        "operationId": "enum.teams",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/notification-definitions": {
      "get": {
        "operationId": "enum.notificationDefinitions",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationDefinitionEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/notification-titles": {
      "get": {
        "operationId": "enum.notificationTitles",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationTitleResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/communicate-status": {
      "get": {
        "operationId": "enum.communicateStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/claim_values/detailed_types": {
      "get": {
        "operationId": "enum.getDetailedTypesClaimValues",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/folder_classes/type": {
      "get": {
        "operationId": "enum.folderClassesType",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FolderClassEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/airlines": {
      "get": {
        "operationId": "enum.getAirlines",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/agreement-types": {
      "get": {
        "operationId": "enum.agreementTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/agreements": {
      "get": {
        "operationId": "enum.getAgreements",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgreementEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/enum-contract-types": {
      "get": {
        "operationId": "enum.enumContractTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/gmail-mail-statuses": {
      "get": {
        "operationId": "enum.gmailMailStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/footer_class": {
      "get": {
        "operationId": "enum.getFooterClasses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/attachment-types": {
      "get": {
        "operationId": "enum.attachmentTypes",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "service_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumLangResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/contract-types": {
      "get": {
        "operationId": "enum.contractTypes",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "service_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractTypeEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/insurance-companies": {
      "get": {
        "operationId": "enum.getInsuranceCompanies",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/campaigns": {
      "get": {
        "operationId": "enum.getCampaigns",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/contracts": {
      "get": {
        "operationId": "enum.getContracts",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/analyzer-verifier": {
      "get": {
        "operationId": "enum.getAnalyzerVerifiers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/insurance-types": {
      "get": {
        "operationId": "enum.getInsuranceTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/legal-statuses": {
      "get": {
        "operationId": "enum.getLegalStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/companies": {
      "get": {
        "operationId": "enum.getCompanies",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/block-types": {
      "get": {
        "operationId": "enum.getPhoneBlockTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/attachment_types": {
      "get": {
        "operationId": "enum.getAttachmentTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumLangResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/claim_wire_transfer_status": {
      "get": {
        "operationId": "enum.getCwtStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/claim_value_types": {
      "get": {
        "operationId": "enum.getClaimValueTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/folder_classes": {
      "get": {
        "operationId": "enum.getFolderClasses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/folder_classes/distribution": {
      "get": {
        "operationId": "enum.getDistributions",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/campaign_update_status": {
      "get": {
        "operationId": "enum.getCampaignUpdateStatus",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/checked_users": {
      "get": {
        "operationId": "enum.getCheckedUsers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/contract_enablement_names": {
      "get": {
        "operationId": "enum.getContractEnablementNames",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/contractable": {
      "get": {
        "operationId": "enum.getContractable",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/contract_group_names": {
      "get": {
        "operationId": "enum.getContractGroupNames",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/portal-document-types": {
      "get": {
        "operationId": "enum.portalDocumentTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/information-portal-accounts": {
      "get": {
        "operationId": "enum.informationPortalAccounts",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/car-makes": {
      "get": {
        "operationId": "enum.getCarMakes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumNameResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/grouped-statuses": {
      "get": {
        "operationId": "enum.groupedStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/sellables": {
      "get": {
        "operationId": "enum.getSellables",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/contracts-for-case-scope": {
      "get": {
        "operationId": "enum.getContractsForCaseScope",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sellable",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractForCaseScopeResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/attachment-types-for-case-scope": {
      "get": {
        "operationId": "enum.getAttachmentTypesForCaseScope",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "sellable",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentTypesForCaseScopeResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/lead-attachments/folders/{leadId}": {
      "get": {
        "operationId": "enum.getFoldersForAttachments",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "leadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/filled-contracts": {
      "get": {
        "operationId": "enum.getFilledContracts",
        "description": "\u26a0\ufe0fCannot generate request documentation: getModelByName(): Argument #1 ($name) must be of type string, null given, called in /var/www/html/app/Http/Requests/ModelIdRequest.php on line 32",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/attachments": {
      "get": {
        "operationId": "enum.getAttachmentsByGivenType",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "lead_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment_type_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumAttachmentPasswordResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/enums/printable": {
      "get": {
        "operationId": "enum.getPrintable",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/printable-type": {
      "get": {
        "operationId": "enum.getPrintableTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/portal-instances": {
      "get": {
        "operationId": "enum.getPortalInstances",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/custom-hosts": {
      "get": {
        "operationId": "enums.get-url-shortener-custom-hosts",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UrlShortenerHostResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/case-related-stages": {
      "get": {
        "operationId": "enum.get-case-related-stages",
        "description": "\u26a0\ufe0fCannot generate request documentation: getModelByName(): Argument #1 ($name) must be of type string, null given, called in /var/www/html/app/Http/Requests/ModelIdRequest.php on line 32",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lead_id": {
                      "type": "string"
                    },
                    "opportunity_id": {
                      "type": "string"
                    },
                    "purchase_id": {
                      "type": "string"
                    },
                    "claim_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "lead_id",
                    "opportunity_id",
                    "purchase_id",
                    "claim_id"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/campaign-types": {
      "get": {
        "operationId": "enum.get-campaign-types",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/communicate-messages": {
      "get": {
        "operationId": "enum.communicate-messages",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/roles-permissions": {
      "get": {
        "operationId": "enum.getRolesPermissions",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumRoleResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/roles-routes": {
      "get": {
        "operationId": "enum.getRolesRoutes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumRouteResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/additional-status-lines": {
      "get": {
        "operationId": "enum.get-additional-status-lines",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/categories": {
      "get": {
        "operationId": "enum.get-categories",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/analysis-survey-stages": {
      "get": {
        "operationId": "enum.getAnalysisSurveyStages",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/tag-types": {
      "get": {
        "operationId": "enum.getTagTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/sellers": {
      "get": {
        "operationId": "enum.getSellers",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/partners": {
      "get": {
        "operationId": "enum.getPartners",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/complaint-types": {
      "get": {
        "operationId": "enum.getComplaintTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/lead-prices": {
      "get": {
        "operationId": "enum.getLeadPrices",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/additional-statuses": {
      "get": {
        "operationId": "enum.getAdditionalStatuses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/modules": {
      "get": {
        "operationId": "enum.getCrmModules",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/action-types": {
      "get": {
        "operationId": "enum.getActionTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/auto-sell-sort-classes": {
      "get": {
        "operationId": "enum.getAutoSellSortClasses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/access-classes": {
      "get": {
        "operationId": "enum.getAccessClasses",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/company-users/{company}": {
      "get": {
        "operationId": "enum.getCompanyUsers",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "company",
            "in": "path",
            "required": true,
            "description": "The company ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/category-prices": {
      "get": {
        "operationId": "enum.getCategoryPrices",
        "tags": ["Enum"],
        "parameters": [
          {
            "name": "product_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryPriceEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/enums/sent-to": {
      "get": {
        "operationId": "enum.getSentTo",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/malfunction-checker-conditionables": {
      "get": {
        "operationId": "enum.getMalfunctionCheckerConditionables",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/enums/communicate-types": {
      "get": {
        "operationId": "enum.getCommunicateTypes",
        "tags": ["Enum"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/b2y/store/{hash}/chunked-attachment": {
      "post": {
        "operationId": "b2y.chunkUploadAttachment",
        "tags": ["ExternalTraffic"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChunkUploadAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "percentage": {
                      "type": "string"
                    }
                  },
                  "required": ["percentage"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/filled-contracts/{filledContract}/download": {
      "get": {
        "operationId": "filled-contracts.download",
        "tags": ["FilledContract"],
        "parameters": [
          {
            "name": "filledContract",
            "in": "path",
            "required": true,
            "description": "The filled contract ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/filter-templates": {
      "get": {
        "operationId": "filterTemplate.index",
        "tags": ["FilterTemplate"],
        "parameters": [
          {
            "name": "route",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterTemplateResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "filterTemplate.store",
        "tags": ["FilterTemplate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterTemplateStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FilterTemplateResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/filter-templates/{filterTemplate}": {
      "put": {
        "operationId": "filterTemplate.update",
        "tags": ["FilterTemplate"],
        "parameters": [
          {
            "name": "filterTemplate",
            "in": "path",
            "required": true,
            "description": "The filter template ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterTemplateUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterTemplateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "filterTemplate.destroy",
        "tags": ["FilterTemplate"],
        "parameters": [
          {
            "name": "filterTemplate",
            "in": "path",
            "required": true,
            "description": "The filter template ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["soft", "hard"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/focus/webhook": {
      "post": {
        "operationId": "focus.webhook",
        "tags": ["Focus"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          }
        }
      }
    },
    "/folder-classes": {
      "get": {
        "operationId": "folderClass.index",
        "tags": ["FolderClass"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "english_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "polish_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/folder-classes/count": {
      "get": {
        "operationId": "folderClass.indexCount",
        "tags": ["FolderClass"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "english_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "polish_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/folder-classes/{folderClass}": {
      "get": {
        "operationId": "folderClass.show",
        "tags": ["FolderClass"],
        "parameters": [
          {
            "name": "folderClass",
            "in": "path",
            "required": true,
            "description": "The folder class ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderClassShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "folderClass.update",
        "tags": ["FolderClass"],
        "parameters": [
          {
            "name": "folderClass",
            "in": "path",
            "required": true,
            "description": "The folder class ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderClassUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderClassUpdateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/password/email": {
      "post": {
        "operationId": "forgotPassword.sendResetLinkEmail",
        "summary": "Send a reset link to the given user",
        "tags": ["ForgotPassword"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/saved-mails": {
      "get": {
        "operationId": "gmailMail.index",
        "tags": ["GmailMail"],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "mail_id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GmailMailStatusEnum"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/saved-mails/count": {
      "get": {
        "operationId": "gmailMail.indexCount",
        "tags": ["GmailMail"],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sender",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "mail_id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GmailMailStatusEnum"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/saved-mails/{gmailMail}": {
      "get": {
        "operationId": "gmailMail.show",
        "tags": ["GmailMail"],
        "parameters": [
          {
            "name": "gmailMail",
            "in": "path",
            "required": true,
            "description": "The gmail mail ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GmailMailShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "gmailMail.destroy",
        "tags": ["GmailMail"],
        "parameters": [
          {
            "name": "gmailMail",
            "in": "path",
            "required": true,
            "description": "The gmail mail ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/hff-reports": {
      "get": {
        "operationId": "hff-reportsindex",
        "tags": ["HelpfindFundingReport"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/hff-reports/count": {
      "get": {
        "operationId": "hff-reportscount",
        "tags": ["HelpfindFundingReport"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/hff-reports/download-documents": {
      "get": {
        "operationId": "hff-reportsdownload-documents",
        "tags": ["HelpfindFundingReport"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/images/{image}": {
      "delete": {
        "operationId": "imagesdestroy",
        "tags": ["Image"],
        "parameters": [
          {
            "name": "image",
            "in": "path",
            "required": true,
            "description": "The image ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/incomes-costs": {
      "get": {
        "operationId": "incomesAndCosts.index",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "opportunity_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "purchase_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "cost_subtype",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "locked_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "future_profit",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "paid_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paid",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "accounted_for",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_opportunity_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_purchase_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_claim_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "canceled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_type",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "correction",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "tax",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["=", "!="]
            }
          },
          {
            "name": "ignoreOldParents",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "trusteeship",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "analyzer",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/incomes-costs/set-partner-paid": {
      "get": {
        "operationId": "incomesAndCosts.setPartnerPaid",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "opportunity_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "purchase_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "cost_subtype",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "locked_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "future_profit",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "paid_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paid",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "accounted_for",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_opportunity_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_purchase_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_claim_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "canceled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_type",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "correction",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "tax",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["=", "!="]
            }
          },
          {
            "name": "ignoreOldParents",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "trusteeship",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "analyzer",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 0,
                      "maxItems": 0,
                      "additionalItems": false
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/incomes-costs/filtered-excel": {
      "get": {
        "operationId": "incomesAndCosts.downloadExcelIndex",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "excel_keys",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "additional_keys",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "opportunity_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "purchase_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "cost_subtype",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "locked_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "future_profit",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "paid_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paid",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "accounted_for",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_opportunity_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_purchase_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_claim_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "canceled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_type",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "correction",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "tax",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["=", "!="]
            }
          },
          {
            "name": "ignoreOldParents",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "trusteeship",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "analyzer",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/incomes-costs/headings-excel": {
      "get": {
        "operationId": "headings-excel",
        "tags": ["IncomesAndCosts"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/incomes-costs/get/count": {
      "get": {
        "operationId": "incomesAndCosts.count",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "opportunity_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "purchase_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "cost_subtype",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "locked_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "future_profit",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "paid_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paid",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "accounted_for",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_opportunity_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_purchase_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_claim_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "canceled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_type",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "correction",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "tax",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["=", "!="]
            }
          },
          {
            "name": "ignoreOldParents",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "trusteeship",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "analyzer",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/incomes-costs/{incomesAndCosts}": {
      "delete": {
        "operationId": "destroy",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "incomesAndCosts",
            "in": "path",
            "required": true,
            "description": "The incomes and costs ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "get": {
        "operationId": "incomesAndCosts.show",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "incomesAndCosts",
            "in": "path",
            "required": true,
            "description": "The incomes and costs ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomesAndCostsResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "incomesAndCosts.update",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "incomesAndCosts",
            "in": "path",
            "required": true,
            "description": "The incomes and costs ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIncomesAndCostsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/incomes-costs/{incomesAndCosts}/force-update": {
      "put": {
        "operationId": "force-update",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "incomesAndCosts",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/incomes-costs/get/sum": {
      "get": {
        "operationId": "incomesAndCosts.sum",
        "tags": ["IncomesAndCosts"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "opportunity_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "purchase_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accounted_for_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "service",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "cost_subtype",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "locked_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "future_profit",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "paid_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "paid",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "accounted_for",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_opportunity_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_purchase_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "show_claim_status",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "canceled",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "canceled_type",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "correction",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "tax",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["=", "!="]
            }
          },
          {
            "name": "ignoreOldParents",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "trusteeship",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["yes", "no"]
            }
          },
          {
            "name": "analyzer",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "exported_batch",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeAndCostSumResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "operationId": "invoices.index",
        "tags": ["Invoice"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "enum": ["1", "2", "3", "4"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/invoices/filtered-excel": {
      "get": {
        "operationId": "invoices.download-excel-index",
        "tags": ["Invoice"],
        "parameters": [
          {
            "name": "keys",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "enum": ["1", "2", "3", "4"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/invoices/{invoice}": {
      "get": {
        "operationId": "invoices.show",
        "tags": ["Invoice"],
        "parameters": [
          {
            "name": "invoice",
            "in": "path",
            "required": true,
            "description": "The invoice ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowInvoiceResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/invoices/get/sum": {
      "get": {
        "operationId": "invoices.get.sum",
        "tags": ["Invoice"],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "enum": ["1", "2", "3", "4"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSumResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/invoices/get/count": {
      "get": {
        "operationId": "invoices.get.count",
        "tags": ["Invoice"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoice_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "invoice_number",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_services",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "invoice_payment_statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "enum": ["1", "2", "3", "4"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/leads/{lead}/edit-attachments/{scope}/{hash}": {
      "get": {
        "operationId": "leads.edit-attachments",
        "tags": ["Lead"],
        "parameters": [
          {
            "name": "lead",
            "in": "path",
            "required": true,
            "description": "The lead ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadEditAttachmentsDirectoryResource"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/leads/{lead}/upload/{scope}": {
      "post": {
        "operationId": "lead.uploadAttachment",
        "tags": ["Lead"],
        "parameters": [
          {
            "name": "lead",
            "in": "path",
            "required": true,
            "description": "The lead ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ],
                  "minItems": 1,
                  "maxItems": 1,
                  "additionalItems": false
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/leads/{lead}/directories": {
      "get": {
        "operationId": "lead.getDirectories",
        "tags": ["Lead"],
        "parameters": [
          {
            "name": "lead",
            "in": "path",
            "required": true,
            "description": "The lead ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/lead-accesses/count": {
      "get": {
        "operationId": "lead-accesses.count",
        "tags": ["LeadAccess"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_price",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LeadPriceEnum"
            }
          },
          {
            "name": "complaint_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComplaintTypeEnum"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "transferred",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "additional_status_definition_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "seller_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "company_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "not_from_sites_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer",
                      "example": 0
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/lead-accesses/headings-excel": {
      "get": {
        "operationId": "leadAccess.headingsExcel",
        "tags": ["LeadAccess"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/lead-accesses/filtered-excel": {
      "get": {
        "operationId": "leadAccess.filteredExcel",
        "tags": ["LeadAccess"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_price",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LeadPriceEnum"
            }
          },
          {
            "name": "complaint_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComplaintTypeEnum"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "transferred",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "keys",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "additional_status_definition_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "seller_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "company_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "not_from_sites_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/lead-accesses": {
      "get": {
        "operationId": "lead-accesses.index",
        "tags": ["LeadAccess"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_price",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LeadPriceEnum"
            }
          },
          {
            "name": "complaint_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ComplaintTypeEnum"
            }
          },
          {
            "name": "locked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "transferred",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "additional_status_definition_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "seller_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "company_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "not_from_sites_ids",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/types": {
      "get": {
        "operationId": "linkableType.forTodoTasks",
        "tags": ["LinkableType"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/locations": {
      "get": {
        "operationId": "locations.index",
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "locations.store",
        "tags": ["Location"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/locations/{location}": {
      "get": {
        "operationId": "locations.show",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "locations.update",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "locations.destroy",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/login": {
      "post": {
        "operationId": "login.login",
        "tags": ["Login"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "redirect": {
                          "type": "string"
                        }
                      },
                      "required": ["redirect"]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "operationId": "login.logout",
        "tags": ["Login"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 0,
                  "maxItems": 0,
                  "additionalItems": false
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/malfunction-checkers": {
      "get": {
        "operationId": "malfunctionChecker.index",
        "tags": ["MalfunctionChecker"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "monitor_start_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          },
          {
            "name": "monitor_end_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "malfunctionChecker.store",
        "tags": ["MalfunctionChecker"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MalfunctionCheckerStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MalfunctionCheckerResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/malfunction-checkers/count": {
      "get": {
        "operationId": "malfunctionChecker.count",
        "tags": ["MalfunctionChecker"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "monitor_start_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          },
          {
            "name": "monitor_end_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/malfunction-checkers/{malfunctionChecker}": {
      "get": {
        "operationId": "malfunctionChecker.show",
        "tags": ["MalfunctionChecker"],
        "parameters": [
          {
            "name": "malfunctionChecker",
            "in": "path",
            "required": true,
            "description": "The malfunction checker ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MalfunctionCheckerResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "malfunctionChecker.update",
        "tags": ["MalfunctionChecker"],
        "parameters": [
          {
            "name": "malfunctionChecker",
            "in": "path",
            "required": true,
            "description": "The malfunction checker ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MalfunctionCheckerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MalfunctionCheckerResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "malfunctionChecker.destroy",
        "tags": ["MalfunctionChecker"],
        "parameters": [
          {
            "name": "malfunctionChecker",
            "in": "path",
            "required": true,
            "description": "The malfunction checker ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates/leads": {
      "get": {
        "operationId": "mass-communicates.leads",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "minLength": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeadsResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates": {
      "get": {
        "operationId": "mass-communicates.index",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "repetitive_sending",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates/count": {
      "get": {
        "operationId": "mass-communicates.count",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "repetitive_sending",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates/{massCommunicate}": {
      "get": {
        "operationId": "mass-communicates.show",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "massCommunicate",
            "in": "path",
            "required": true,
            "description": "The mass communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowMassCommunicateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "mass-communicates.delete",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "massCommunicate",
            "in": "path",
            "required": true,
            "description": "The mass communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates/{massCommunicate}/repetitive-status": {
      "post": {
        "operationId": "mass-communicates.",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "massCommunicate",
            "in": "path",
            "required": true,
            "description": "The mass communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/mass-communicates/{massCommunicate}/send": {
      "post": {
        "operationId": "mass-communicates.send",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "massCommunicate",
            "in": "path",
            "required": true,
            "description": "The mass communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/mass-communicates/{massCommunicate}/send/test": {
      "post": {
        "operationId": "mass-communicates.sendTest",
        "tags": ["MassCommunicate"],
        "parameters": [
          {
            "name": "massCommunicate",
            "in": "path",
            "required": true,
            "description": "The mass communicate ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSendCommunicateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/history/{class}/{id}": {
      "get": {
        "operationId": "history.fetch-history",
        "tags": ["ModelHistory"],
        "parameters": [
          {
            "name": "class",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/history/{class}/{id}/archive": {
      "get": {
        "operationId": "history.fetch-archived-history",
        "tags": ["ModelHistory"],
        "parameters": [
          {
            "name": "class",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/notifications/filter-pp-accounts": {
      "get": {
        "operationId": "notification.filterPPAccounts",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "operationId": "notification.index",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "pp_account_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "notification_definition_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "notification.destroy",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notifications/count": {
      "get": {
        "operationId": "notification.count",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "pp_account_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "notification_definition_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notifications/read": {
      "put": {
        "operationId": "notification.readNotifications",
        "tags": ["Notification"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationReadDestroyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notifications/unread": {
      "put": {
        "operationId": "notification.unreadNotifications",
        "tags": ["Notification"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationReadDestroyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notifications/navbar": {
      "get": {
        "operationId": "notification.getNavbar",
        "tags": ["Notification"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationNavbarResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/notifications/{notification}": {
      "get": {
        "operationId": "notification.show",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "notification",
            "in": "path",
            "required": true,
            "description": "The notification ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notification-definitions": {
      "get": {
        "operationId": "notificationDefinition.index",
        "tags": ["NotificationDefinition"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "teams",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "must_be_confirmed",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "read_by_one_from_team",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "notificationDefinition.store",
        "tags": ["NotificationDefinition"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateNotificationDefinitionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDefinitionResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notification-definitions/count": {
      "get": {
        "operationId": "notificationDefinition.indexCount",
        "tags": ["NotificationDefinition"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "teams",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "must_be_confirmed",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "read_by_one_from_team",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/notification-definitions/{notificationDefinition}": {
      "get": {
        "operationId": "notificationDefinition.show",
        "tags": ["NotificationDefinition"],
        "parameters": [
          {
            "name": "notificationDefinition",
            "in": "path",
            "required": true,
            "description": "The notification definition ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDefinitionResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "notificationDefinition.update",
        "tags": ["NotificationDefinition"],
        "parameters": [
          {
            "name": "notificationDefinition",
            "in": "path",
            "required": true,
            "description": "The notification definition ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateNotificationDefinitionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDefinitionResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "notificationDefinition.destroy",
        "tags": ["NotificationDefinition"],
        "parameters": [
          {
            "name": "notificationDefinition",
            "in": "path",
            "required": true,
            "description": "The notification definition ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/partner-account-histories": {
      "get": {
        "operationId": "partnerAccountHistory.index",
        "tags": ["PartnerAccountHistory"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ActionTypeEnum"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/partner-account-histories/count": {
      "get": {
        "operationId": "partnerAccountHistory.count",
        "tags": ["PartnerAccountHistory"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "action_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ActionTypeEnum"
            }
          },
          {
            "name": "partner_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/cases/update/{case}": {
      "put": {
        "operationId": "claims.portals.portal-case.update",
        "tags": ["PortalCase"],
        "parameters": [
          {
            "name": "case",
            "in": "path",
            "required": true,
            "description": "The case ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortalCaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalCaseResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries": {
      "get": {
        "operationId": "claims.portals.deliveries.index",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_by",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_attached",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/count": {
      "get": {
        "operationId": "claims.portals.deliveries.count",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_by",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_attached",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/bin": {
      "get": {
        "operationId": "claims.portals.deliveries.bin",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_by",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_attached",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/bin/count": {
      "get": {
        "operationId": "claims.portals.deliveries.binCount",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "documents",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "received_by",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "is_attached",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/{portalDelivery}": {
      "get": {
        "operationId": "claims.portals.deliveries.show",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "portalDelivery",
            "in": "path",
            "required": true,
            "description": "The portal delivery ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowPortalDeliveryResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "claims.portals.deliveries.downloadDocumentsForDelivery",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "portalDelivery",
            "in": "path",
            "required": true,
            "description": "The portal delivery ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "string",
                      "example": "Delivery already has \"delivered_at\" set"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/delete": {
      "delete": {
        "operationId": "claims.portals.deliveries.destroy",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/restore": {
      "post": {
        "operationId": "claims.portals.deliveries.restore",
        "tags": ["PortalDelivery"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestorePortalModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/deliveries/assign-documents/{portalDelivery}": {
      "put": {
        "operationId": "claims.portals.deliveries.assignDocumentsToClaim",
        "tags": ["PortalDelivery"],
        "parameters": [
          {
            "name": "portalDelivery",
            "in": "path",
            "required": true,
            "description": "The portal delivery ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePortalDeliveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents": {
      "get": {
        "operationId": "claims.portals.documents.index",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/count": {
      "get": {
        "operationId": "claims.portals.documents.indexCount",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/box": {
      "get": {
        "operationId": "claims.portals.documents.box",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/box/count": {
      "get": {
        "operationId": "claims.portals.documents.boxCount",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_case_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/delete": {
      "delete": {
        "operationId": "claims.portals.documents.destroy",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/{portalDocument}/download-document": {
      "get": {
        "operationId": "claims.portals.documents.downloadDocument",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "portalDocument",
            "in": "path",
            "required": true,
            "description": "The portal document ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortalDocumentIndexResource"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claims/portals/documents/{portalDocument}/read": {
      "post": {
        "operationId": "claims.portals.documents.markAsRead",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "portalDocument",
            "in": "path",
            "required": true,
            "description": "The portal document ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claims/portals/documents/{portalDocument}/unread": {
      "post": {
        "operationId": "claims.portals.documents.markAsUnread",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "portalDocument",
            "in": "path",
            "required": true,
            "description": "The portal document ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/claims/portals/documents/bin": {
      "get": {
        "operationId": "claims.portals.documents.bin",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/bin/count": {
      "get": {
        "operationId": "claims.portals.documents.binCount",
        "tags": ["PortalDocument"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "claim_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "court_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "delivered_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "signature",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "file_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "against",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "publication_date",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_delivered",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalDocumentTypeEnum"
            }
          },
          {
            "name": "portal_account",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "portal_url",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PortalEnum"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_read",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "wps",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["number", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/claims/portals/documents/restore": {
      "post": {
        "operationId": "claims.portals.documents.restore",
        "tags": ["PortalDocument"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestorePortalModelRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/postal-codes/count": {
      "get": {
        "operationId": "postal-codes.count",
        "tags": ["PostalCode"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "checked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/postal-codes": {
      "get": {
        "operationId": "postal-codes.index",
        "tags": ["PostalCode"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "checked",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "postal-codes.store",
        "tags": ["PostalCode"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalCodeStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCodeFullResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/postal-codes/{postalCode}": {
      "get": {
        "operationId": "postal-codes.show",
        "tags": ["PostalCode"],
        "parameters": [
          {
            "name": "postalCode",
            "in": "path",
            "required": true,
            "description": "The postal code code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCodeFullResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "postal-codes.destroy",
        "tags": ["PostalCode"],
        "parameters": [
          {
            "name": "postalCode",
            "in": "path",
            "required": true,
            "description": "The postal code code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/postal-codes/{postal_code}": {
      "put": {
        "operationId": "postal-codes.update",
        "tags": ["PostalCode"],
        "parameters": [
          {
            "name": "postal_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostalCodeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostalCodeFullResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print": {
      "post": {
        "operationId": "print.print",
        "tags": ["Print"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrintRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print/drivers": {
      "get": {
        "operationId": "print.drivers",
        "tags": ["Print"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/print/printers": {
      "get": {
        "operationId": "print.printers",
        "tags": ["Print"],
        "parameters": [
          {
            "name": "print_driver",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["App\\Webservices\\Printers\\PrintDrivers\\PrintTool"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print-templates": {
      "get": {
        "operationId": "printTemplate.index",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sellable",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "printTemplate.store",
        "tags": ["PrintTemplate"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorePrintTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowPrintTemplateResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print-templates/count": {
      "get": {
        "operationId": "printTemplate.count",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sellable",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print-templates/to-select": {
      "get": {
        "operationId": "printTemplate.toSelect",
        "description": "\u26a0\ufe0fCannot generate request documentation: getModelByName(): Argument #1 ($name) must be of type string, null given, called in /var/www/html/app/Http/Requests/ModelIdRequest.php on line 32",
        "tags": ["PrintTemplate"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print-templates/{printTemplate}": {
      "get": {
        "operationId": "printTemplate.show",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "printTemplate",
            "in": "path",
            "required": true,
            "description": "The print template ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowPrintTemplateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "printTemplate.destroy",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "printTemplate",
            "in": "path",
            "required": true,
            "description": "The print template ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "printTemplate.update",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "printTemplate",
            "in": "path",
            "required": true,
            "description": "The print template ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrintTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowPrintTemplateResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/print-templates/{printTemplate}/to-print": {
      "get": {
        "operationId": "printTemplate.toPrint",
        "tags": ["PrintTemplate"],
        "parameters": [
          {
            "name": "printTemplate",
            "in": "path",
            "required": true,
            "description": "The print template ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintTemplateToPrintResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/labels-queue": {
      "get": {
        "operationId": "printerLabel.generateCsv",
        "tags": ["PrinterLabel"],
        "parameters": [
          {
            "name": "label_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DirectInfoPl\\Shared\\Classes\\Labels\\AddressLabel",
                "DirectInfoPl\\Shared\\Classes\\Labels\\SantanderLabel",
                "DirectInfoPl\\Shared\\Classes\\Labels\\IngLabel"
              ]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/producers": {
      "get": {
        "operationId": "producers.index",
        "tags": ["Producer"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sorting_priority",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "site",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "producers.store",
        "tags": ["Producer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducerStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerShowResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/producers/count": {
      "get": {
        "operationId": "producers.count",
        "tags": ["Producer"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "short_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sorting_priority",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "site",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/producers/{producer}": {
      "get": {
        "operationId": "producers.show",
        "tags": ["Producer"],
        "parameters": [
          {
            "name": "producer",
            "in": "path",
            "required": true,
            "description": "The producer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "producers.update",
        "tags": ["Producer"],
        "parameters": [
          {
            "name": "producer",
            "in": "path",
            "required": true,
            "description": "The producer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "producers.destroy",
        "tags": ["Producer"],
        "parameters": [
          {
            "name": "producer",
            "in": "path",
            "required": true,
            "description": "The producer ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/products/count": {
      "get": {
        "operationId": "products.count",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/products": {
      "get": {
        "operationId": "products.index",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "products.store",
        "tags": ["Product"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/products/{product}": {
      "get": {
        "operationId": "products.show",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "description": "The product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ProductResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "products.update",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "description": "The product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "products.destroy",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "description": "The product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/additional_fields": {
      "get": {
        "operationId": "productAdditionalFields.index",
        "tags": ["ProductAdditionalFields"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/additional_fields/count": {
      "get": {
        "operationId": "productAdditionalFields.count",
        "tags": ["ProductAdditionalFields"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/additional_fields/{product}": {
      "get": {
        "operationId": "productAdditionalFields.show",
        "tags": ["ProductAdditionalFields"],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "description": "The product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowProductAdditionalFieldsResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "productAdditionalFields.update",
        "tags": ["ProductAdditionalFields"],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "description": "The product ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdditionalFieldProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowProductAdditionalFieldsResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "projects.index",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "cc_phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_price",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sell_limit",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "free_leads",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "gmail_labels",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "check_partners",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "sites",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          },
          {
            "name": "attachment_types",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "projects.create",
        "tags": ["Project"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/projects/count": {
      "get": {
        "operationId": "projects.count",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "cc_phone",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "lead_price",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "sell_limit",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "free_leads",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "gmail_labels",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "check_partners",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "sites",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          },
          {
            "name": "attachment_types",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/projects/{project}": {
      "get": {
        "operationId": "projects.show",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexProjectResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "projects.update",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "projects.destroy",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "operationId": "projectSite.index",
        "tags": ["ProjectSite"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "module",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "projectSite.store",
        "tags": ["ProjectSite"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSiteStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSiteResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/sites/count": {
      "get": {
        "operationId": "projectSite.count",
        "tags": ["ProjectSite"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "site_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "consultant_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "module",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/sites/{projectSite}": {
      "put": {
        "operationId": "projectSite.update",
        "tags": ["ProjectSite"],
        "parameters": [
          {
            "name": "projectSite",
            "in": "path",
            "required": true,
            "description": "The project site ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectSiteUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSiteResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "get": {
        "operationId": "projectSite.show",
        "tags": ["ProjectSite"],
        "parameters": [
          {
            "name": "projectSite",
            "in": "path",
            "required": true,
            "description": "The project site ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSiteResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "projectSite.destroy",
        "tags": ["ProjectSite"],
        "parameters": [
          {
            "name": "projectSite",
            "in": "path",
            "required": true,
            "description": "The project site ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/provinces": {
      "get": {
        "operationId": "provinces.index",
        "tags": ["Province"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "provinces.store",
        "tags": ["Province"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvinceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/provinces/{province}": {
      "get": {
        "operationId": "provinces.show",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "provinces.update",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvinceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "provinces.destroy",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/ranking-companies/count": {
      "get": {
        "operationId": "ranking-companies.count",
        "tags": ["RankingCompany"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "krs",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "nip",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/ranking-companies": {
      "get": {
        "operationId": "ranking-companies.index",
        "tags": ["RankingCompany"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "krs",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "nip",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "ranking-companies.store",
        "tags": ["RankingCompany"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankingCompanyStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/ranking-companies/{rankingCompany}": {
      "get": {
        "operationId": "ranking-companies.show",
        "tags": ["RankingCompany"],
        "parameters": [
          {
            "name": "rankingCompany",
            "in": "path",
            "required": true,
            "description": "The ranking company ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingCompanyResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "ranking-companies.destroy",
        "tags": ["RankingCompany"],
        "parameters": [
          {
            "name": "rankingCompany",
            "in": "path",
            "required": true,
            "description": "The ranking company ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/ranking-companies/{ranking_company}": {
      "put": {
        "operationId": "ranking-companies.update",
        "tags": ["RankingCompany"],
        "parameters": [
          {
            "name": "ranking_company",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankingCompanyUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "operationId": "resetPassword.reset",
        "summary": "Reset the given user's password",
        "tags": ["ResetPassword"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "operationId": "role.index",
        "tags": ["Role"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          },
          {
            "name": "routes",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "role.store",
        "tags": ["Role"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/roles/count": {
      "get": {
        "operationId": "role.count",
        "tags": ["Role"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          },
          {
            "name": "routes",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/roles/{role}": {
      "get": {
        "operationId": "role.show",
        "tags": ["Role"],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexRoleResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "role.update",
        "tags": ["Role"],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "role.destroy",
        "tags": ["Role"],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/scout/search": {
      "get": {
        "operationId": "scoutSearch",
        "tags": ["ScoutSearch"],
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["account", "model"]
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/insurance-companies": {
      "get": {
        "operationId": "self-service.insurance-companies",
        "tags": ["SelfService"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfServiceInsuranceCompanyEnumResource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/self-service/ratings": {
      "get": {
        "operationId": "self-service.ratings",
        "tags": ["SelfService"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/self-service/{hash}/create-test-self-service": {
      "get": {
        "operationId": "self-service.create-test-self-service",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "description": "The hash ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "string",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hash": {
                      "type": "string"
                    }
                  },
                  "required": ["hash"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/self-service/{hash}": {
      "get": {
        "operationId": "self-service.show",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceShowResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "self-service.update",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceShowResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{hash}/consultant": {
      "post": {
        "operationId": "self-service.update-by-user",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelfServiceShowResource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{hash}/complete-stage": {
      "post": {
        "operationId": "self-service.complete-stage",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceCompleteStageRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{hash}/update-step": {
      "post": {
        "operationId": "self-service.update-step",
        "tags": ["SelfService"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceUpdateStepRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{service}/attachments": {
      "get": {
        "operationId": "self-service.attachments.index",
        "tags": ["SelfServiceAttachment"],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "The service ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment_type_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfServiceAttachmentResource"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{hash}/attachments": {
      "post": {
        "operationId": "self-service.attachments.store",
        "tags": ["SelfServiceAttachment"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceStoreAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "percentage": {
                      "type": "string"
                    }
                  },
                  "required": ["percentage"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/self-service/{hash}/attachments/{attachment}": {
      "put": {
        "operationId": "self-service.attachments.update",
        "tags": ["SelfServiceAttachment"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServiceUpdateAttachmentRequest"
              }
            }
          }
        },
        "responses": {
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "self-service.attachments.destroy",
        "tags": ["SelfServiceAttachment"],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment",
            "in": "path",
            "required": true,
            "description": "The attachment ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lead_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/streets": {
      "get": {
        "operationId": "streets.index",
        "tags": ["Street"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "streets.store",
        "tags": ["Street"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreetStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/streets/{street}": {
      "get": {
        "operationId": "streets.show",
        "tags": ["Street"],
        "parameters": [
          {
            "name": "street",
            "in": "path",
            "required": true,
            "description": "The street ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "streets.update",
        "tags": ["Street"],
        "parameters": [
          {
            "name": "street",
            "in": "path",
            "required": true,
            "description": "The street ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreetUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "streets.destroy",
        "tags": ["Street"],
        "parameters": [
          {
            "name": "street",
            "in": "path",
            "required": true,
            "description": "The street ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "operationId": "survey.index",
        "tags": ["Survey"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "project",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "stage",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": [
                "App\\Models\\Lead",
                "App\\Models\\Opportunity",
                "App\\Models\\Purchase",
                "App\\Models\\Claim"
              ]
            }
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "survey.store",
        "tags": ["Survey"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreSurveyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/surveys/count": {
      "get": {
        "operationId": "survey.count",
        "tags": ["Survey"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "project",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "campaign",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "stage",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": [
                "App\\Models\\Lead",
                "App\\Models\\Opportunity",
                "App\\Models\\Purchase",
                "App\\Models\\Claim"
              ]
            }
          },
          {
            "name": "product",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/surveys/{survey}": {
      "get": {
        "operationId": "survey.show",
        "tags": ["Survey"],
        "parameters": [
          {
            "name": "survey",
            "in": "path",
            "required": true,
            "description": "The survey ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyIndexResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "survey.update",
        "tags": ["Survey"],
        "parameters": [
          {
            "name": "survey",
            "in": "path",
            "required": true,
            "description": "The survey ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreSurveyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "survey.destroy",
        "tags": ["Survey"],
        "parameters": [
          {
            "name": "survey",
            "in": "path",
            "required": true,
            "description": "The survey ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/documentation": {
      "get": {
        "operationId": "l5-swagger.default.api",
        "summary": "Display Swagger API page",
        "tags": ["Swagger"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2-callback": {
      "get": {
        "operationId": "l5-swagger.default.oauth2_callback",
        "summary": "Display Oauth2 callback pages",
        "tags": ["Swagger"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/todo-tasks/tags": {
      "get": {
        "operationId": "tag.index",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "minLength": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "tag.store",
        "tags": ["Tag"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/tags/count": {
      "get": {
        "operationId": "tag.indexCount",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "minLength": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/todo-tasks/tags/{tag}": {
      "get": {
        "operationId": "tag.show",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "tag.update",
        "description": "\u26a0\ufe0fCannot generate request documentation: Call to a member function parameter() on null",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "tag.destroy",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/taxes": {
      "get": {
        "operationId": "taxes.index",
        "tags": ["Tax"],
        "parameters": [
          {
            "name": "office",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "street",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "taxes.store",
        "tags": ["Tax"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxShowResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/taxes/count": {
      "get": {
        "operationId": "taxes.count",
        "tags": ["Tax"],
        "parameters": [
          {
            "name": "office",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "street",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/taxes/update-tax-institutions": {
      "post": {
        "operationId": "taxes.update-tax-institutions",
        "tags": ["Tax"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaxUpdateTaxInstitutionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/taxes/{tax}": {
      "get": {
        "operationId": "taxes.show",
        "tags": ["Tax"],
        "parameters": [
          {
            "name": "tax",
            "in": "path",
            "required": true,
            "description": "The tax ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "taxes.update",
        "tags": ["Tax"],
        "parameters": [
          {
            "name": "tax",
            "in": "path",
            "required": true,
            "description": "The tax ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxShowResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "taxes.destroy",
        "tags": ["Tax"],
        "parameters": [
          {
            "name": "tax",
            "in": "path",
            "required": true,
            "description": "The tax ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/teams/count": {
      "get": {
        "operationId": "teams.count",
        "tags": ["Team"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "operationId": "teams.index",
        "tags": ["Team"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "users",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["integer", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "teams.store",
        "tags": ["Team"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/teams/{team}": {
      "get": {
        "operationId": "teams.show",
        "tags": ["Team"],
        "parameters": [
          {
            "name": "team",
            "in": "path",
            "required": true,
            "description": "The team ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "put": {
        "operationId": "teams.update",
        "tags": ["Team"],
        "parameters": [
          {
            "name": "team",
            "in": "path",
            "required": true,
            "description": "The team ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "teams.destroy",
        "tags": ["Team"],
        "parameters": [
          {
            "name": "team",
            "in": "path",
            "required": true,
            "description": "The team ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks": {
      "get": {
        "operationId": "todoTask.index",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_by_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "ignore_scope",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "deadline",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "assigned",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["0", "1"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "todoTask.store",
        "tags": ["TodoTask"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTodoTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/count": {
      "get": {
        "operationId": "todoTask.countTodoTask",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "created_by_id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"]
            }
          },
          {
            "name": "ignore_scope",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "deadline",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "assigned",
            "in": "query",
            "schema": {
              "type": ["string", "null"],
              "enum": ["0", "1"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/navbar": {
      "get": {
        "operationId": "todoTask.todoTasksForNavbar",
        "tags": ["TodoTask"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexTodoTaskResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/todo-tasks/{todoTask}": {
      "put": {
        "operationId": "todoTask.update",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "todoTask.destroy",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeleteTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "get": {
        "operationId": "todoTask.show",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexTodoTaskResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/todo-tasks/{todoTask}/assign": {
      "post": {
        "operationId": "todoTask.assign",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignTodoTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/{todoTask}/comment": {
      "post": {
        "operationId": "todoTask.addComment",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexTodoTaskResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/todo-tasks/{todoTask}/status": {
      "post": {
        "operationId": "todoTask.addStatus",
        "tags": ["TodoTask"],
        "parameters": [
          {
            "name": "todoTask",
            "in": "path",
            "required": true,
            "description": "The todo task ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexTodoTaskResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/url-shortener/count": {
      "get": {
        "operationId": "url-shortener.count",
        "tags": ["UrlShortener"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "minimum": 1
            }
          },
          {
            "name": "short_url",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "target_url",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "host",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "custom",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    }
                  },
                  "required": ["count"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/url-shortener": {
      "get": {
        "operationId": "url-shortener.index",
        "tags": ["UrlShortener"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "minimum": 1
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": ["integer", "null"],
              "minimum": 1
            }
          },
          {
            "name": "short_url",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "target_url",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "host",
            "in": "query",
            "schema": {
              "type": ["string", "null"]
            }
          },
          {
            "name": "custom",
            "in": "query",
            "schema": {
              "type": ["boolean", "null"]
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "schema": {
              "type": ["array", "null"],
              "items": {
                "type": ["string", "null"]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "url-shortener.store",
        "tags": ["UrlShortener"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UrlShortenerStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/url-shortener/{urlShortener}": {
      "get": {
        "operationId": "url-shortener.show",
        "tags": ["UrlShortener"],
        "parameters": [
          {
            "name": "urlShortener",
            "in": "path",
            "required": true,
            "description": "The url shortener ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrlShortenerResource"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "delete": {
        "operationId": "url-shortener.destroy",
        "tags": ["UrlShortener"],
        "parameters": [
          {
            "name": "urlShortener",
            "in": "path",
            "required": true,
            "description": "The url shortener ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "string"
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/url-shortener/{url_shortener}": {
      "put": {
        "operationId": "url-shortener.update",
        "tags": ["UrlShortener"],
        "parameters": [
          {
            "name": "url_shortener",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "user.getLoggedUser",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "patch": {
        "operationId": "user.updateLoggedUser",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLoggedUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/users/me/change-password": {
      "patch": {
        "operationId": "user.changePassword",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordLoggedUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/users/me/upload-avatar": {
      "post": {
        "operationId": "user.uploadAvatar",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadAvatarLoggedUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    },
    "/users/me/change-lang": {
      "patch": {
        "operationId": "user.changeLang",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeLangLoggedUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessClassEnum": {
        "type": "string",
        "enum": ["App\\Models\\Partners\\LeadAccess"],
        "title": "AccessClassEnum"
      },
      "AccountContactTypeEnum": {
        "type": "integer",
        "enum": [
          10, 20, 25, 30, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
          112, 113, 114, 115, 116, 118, 117, 119, 120, 121, 122, 125, 126, 127,
          128, 129, 134, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
          145, 200, 201, 300, 301, 400, 401, 410, 411, 412, 413, 500, 510, 520,
          530, 531, 123, 124, 800, 850, 130, 132, 900, 901, 902, 903, 904, 905,
          906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
          920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 1000, 9997, 9998,
          9999
        ],
        "title": "AccountContactTypeEnum"
      },
      "ActionAttachmentRequest": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "degrees": {
            "type": "number"
          }
        },
        "title": "ActionAttachmentRequest"
      },
      "ActionTypeEnum": {
        "type": "integer",
        "enum": [
          100, 101, 110, 111, 120, 121, 122, 123, 124, 200, 201, 210, 211, 220,
          221, 222
        ],
        "title": "ActionTypeEnum"
      },
      "AdditionalInformationAccountResource": {
        "type": "object",
        "properties": {
          "account_bank_account_number": {
            "type": "string"
          },
          "account_bank_account_owner": {
            "type": "string"
          },
          "account_id_card_number": {
            "type": "string"
          },
          "account_birth_date": {
            "type": "string"
          },
          "account_pesel": {
            "type": "string"
          },
          "account_nip": {
            "type": "string"
          }
        },
        "required": [
          "account_bank_account_number",
          "account_bank_account_owner",
          "account_id_card_number",
          "account_birth_date",
          "account_pesel",
          "account_nip"
        ],
        "title": "AdditionalInformationAccountResource"
      },
      "AddressAccountResource": {
        "type": "object",
        "properties": {
          "city": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AddressNameIdAccountResource"
              },
              {
                "type": "string"
              }
            ]
          },
          "postal_code_city": {
            "$ref": "#/components/schemas/AddressNameIdAccountResource"
          },
          "postal_code": {
            "$ref": "#/components/schemas/PostalCodeResource"
          },
          "province": {
            "$ref": "#/components/schemas/AddressNameIdAccountResource"
          },
          "country": {
            "$ref": "#/components/schemas/AddressNameIdAccountResource"
          },
          "district": {
            "type": "string"
          },
          "commune": {
            "type": "string"
          },
          "street": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StreetResource"
              },
              {
                "type": "string"
              }
            ]
          },
          "flat_number": {
            "type": "string"
          },
          "building_number": {
            "type": "string"
          }
        },
        "required": [
          "city",
          "postal_code_city",
          "postal_code",
          "province",
          "country",
          "district",
          "commune",
          "street",
          "flat_number",
          "building_number"
        ],
        "title": "AddressAccountResource"
      },
      "AddressNameIdAccountResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "AddressNameIdAccountResource"
      },
      "AddressStoreRequest": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string"
          },
          "building_number": {
            "type": "string"
          }
        },
        "required": ["location_id", "building_number"],
        "title": "AddressStoreRequest"
      },
      "AddressUpdateRequest": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "string"
          },
          "building_number": {
            "type": "string"
          }
        },
        "required": ["location_id", "building_number"],
        "title": "AddressUpdateRequest"
      },
      "AgreementEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "AgreementEnumResource"
      },
      "AgreementTypeEnum": {
        "type": "integer",
        "enum": [1, 2],
        "title": "AgreementTypeEnum"
      },
      "AnalysisSurveyGroupResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": ["string", "null"]
          },
          "order": {
            "type": ["integer", "null"]
          },
          "stage": {
            "type": "object",
            "properties": {
              "value": {
                "type": ["string", "null"]
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "questions": {
            "type": "string"
          }
        },
        "required": ["id", "name", "order", "stage", "questions"],
        "title": "AnalysisSurveyGroupResource"
      },
      "AnalysisSurveyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": ["string", "null"]
          },
          "product": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "active": {
            "type": "boolean"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalysisSurveyGroupResource"
            }
          }
        },
        "required": ["id", "name", "product", "active"],
        "title": "AnalysisSurveyResource"
      },
      "AnalysisSurveyStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "product_id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "groups": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "stage": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                },
                "questions": {
                  "type": ["array", "null"],
                  "items": {
                    "type": "object",
                    "properties": {
                      "question": {
                        "type": "string",
                        "description": "First nesting level"
                      },
                      "tooltip": {
                        "type": ["string", "null"]
                      },
                      "order": {
                        "type": "integer"
                      },
                      "expected_answer": {
                        "type": ["boolean", "null"]
                      },
                      "trigger_answer": {
                        "type": ["boolean", "null"]
                      },
                      "sub_questions": {
                        "type": ["array", "null"],
                        "items": {
                          "type": "object",
                          "properties": {
                            "question": {
                              "type": ["string", "null"],
                              "description": "Second nesting level"
                            },
                            "tooltip": {
                              "type": ["string", "null"]
                            },
                            "order": {
                              "type": "integer"
                            },
                            "expected_answer": {
                              "type": ["boolean", "null"]
                            },
                            "trigger_answer": {
                              "type": ["boolean", "null"]
                            },
                            "sub_questions": {
                              "type": ["array", "null"],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "question": {
                                    "type": ["string", "null"],
                                    "description": "Third nesting level"
                                  },
                                  "tooltip": {
                                    "type": ["string", "null"]
                                  },
                                  "order": {
                                    "type": "integer"
                                  },
                                  "expected_answer": {
                                    "type": ["boolean", "null"]
                                  },
                                  "trigger_answer": {
                                    "type": ["boolean", "null"]
                                  }
                                },
                                "required": ["order"]
                              }
                            }
                          },
                          "required": ["order"]
                        }
                      }
                    },
                    "required": ["question", "order"]
                  }
                }
              },
              "required": ["name", "stage", "order"]
            }
          }
        },
        "required": ["name", "product_id", "active"],
        "title": "AnalysisSurveyStoreRequest"
      },
      "AnalysisSurveyUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "product_id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "groups": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": ["integer", "null"]
                },
                "name": {
                  "type": "string"
                },
                "stage": {
                  "type": "string"
                },
                "order": {
                  "type": "integer"
                },
                "questions": {
                  "type": ["array", "null"],
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": ["integer", "null"],
                        "description": "First nesting level"
                      },
                      "parent_id": {
                        "type": ["integer", "null"]
                      },
                      "question": {
                        "type": "string"
                      },
                      "tooltip": {
                        "type": ["string", "null"]
                      },
                      "order": {
                        "type": "integer"
                      },
                      "expected_answer": {
                        "type": ["boolean", "null"]
                      },
                      "trigger_answer": {
                        "type": ["boolean", "null"]
                      },
                      "sub_questions": {
                        "type": ["array", "null"],
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": ["integer", "null"],
                              "description": "Second nesting level"
                            },
                            "parent_id": {
                              "type": ["integer", "null"]
                            },
                            "question": {
                              "type": "string"
                            },
                            "tooltip": {
                              "type": ["string", "null"]
                            },
                            "order": {
                              "type": "integer"
                            },
                            "expected_answer": {
                              "type": ["boolean", "null"]
                            },
                            "trigger_answer": {
                              "type": ["boolean", "null"]
                            },
                            "sub_questions": {
                              "type": ["array", "null"],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": ["integer", "null"],
                                    "description": "Third nesting level"
                                  },
                                  "parent_id": {
                                    "type": ["integer", "null"]
                                  },
                                  "question": {
                                    "type": "string"
                                  },
                                  "tooltip": {
                                    "type": ["string", "null"]
                                  },
                                  "order": {
                                    "type": "integer"
                                  },
                                  "expected_answer": {
                                    "type": ["boolean", "null"]
                                  },
                                  "trigger_answer": {
                                    "type": ["boolean", "null"]
                                  }
                                },
                                "required": ["question", "order"]
                              }
                            }
                          },
                          "required": ["question", "order"]
                        }
                      }
                    },
                    "required": ["question", "order"]
                  }
                }
              },
              "required": ["name", "stage", "order"]
            }
          }
        },
        "required": ["name", "product_id", "active"],
        "title": "AnalysisSurveyUpdateRequest"
      },
      "AnalyzerEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "AnalyzerEnumResource"
      },
      "AssignTodoTaskRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["user_id"],
        "title": "AssignTodoTaskRequest"
      },
      "AttachmentEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "AttachmentEnumResource"
      },
      "AttachmentProcessingEnum": {
        "type": "string",
        "enum": [
          "grayScale",
          "pdfToJpg",
          "resize",
          "rotate",
          "watermark",
          "merge"
        ],
        "title": "AttachmentProcessingEnum"
      },
      "AttachmentToPrintDetailsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["id", "name", "type", "url", "password"],
        "title": "AttachmentToPrintDetailsResource"
      },
      "AttachmentTypeEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "AttachmentTypeEnumResource"
      },
      "AttachmentTypeIndexResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "english_name": {
            "type": "string"
          },
          "ocr": {
            "type": "string"
          },
          "services": {
            "type": "string"
          },
          "projects": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "english_name",
          "ocr",
          "services",
          "projects"
        ],
        "title": "AttachmentTypeIndexResource"
      },
      "AttachmentTypesForCaseScopeResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        },
        "required": ["label", "value"],
        "title": "AttachmentTypesForCaseScopeResource"
      },
      "AutoSellSortClassEnum": {
        "type": "string",
        "enum": ["App\\Providers\\SellLead\\SortClasses\\DsaSortClass"],
        "title": "AutoSellSortClassEnum"
      },
      "BatchAttachmentRequest": {
        "type": "object",
        "properties": {
          "*": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "action": {
                "$ref": "#/components/schemas/AttachmentProcessingEnum"
              },
              "attributes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["id"]
          }
        },
        "title": "BatchAttachmentRequest"
      },
      "BillInvoiceResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "billable_id": {
            "type": "string"
          },
          "billable_type": {
            "type": "string"
          },
          "payment_status": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "seller_company_id": {
            "type": "string"
          },
          "receiver_id": {
            "type": "string"
          },
          "payer_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "billable_id",
          "billable_type",
          "payment_status",
          "currency",
          "seller_company_id",
          "receiver_id",
          "payer_id"
        ],
        "title": "BillInvoiceResource"
      },
      "BlacklistShowResource": {
        "type": "string",
        "title": "BlacklistShowResource"
      },
      "CampaignResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["id", "name", "type"],
        "title": "CampaignResource"
      },
      "CampaignStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignTypeEnum"
          }
        },
        "required": ["name", "type"],
        "title": "CampaignStoreRequest"
      },
      "CampaignTypeEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 6, 7],
        "title": "CampaignTypeEnum"
      },
      "CampaignUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CampaignTypeEnum"
          }
        },
        "required": ["name", "type"],
        "title": "CampaignUpdateRequest"
      },
      "CategoryPriceEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "CategoryPriceEnumResource"
      },
      "CcCampaignGetResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectIdNameResource"
          },
          "active": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cti_campaign_id": {
            "type": "string"
          },
          "cti_pump_prio": {
            "type": "string"
          },
          "cti_pump_count": {
            "type": "string"
          },
          "cti_pump_crontab": {
            "type": "string"
          },
          "block_status": {
            "type": "string"
          },
          "update_status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "project",
          "active",
          "description",
          "cti_campaign_id",
          "cti_pump_prio",
          "cti_pump_count",
          "cti_pump_crontab",
          "block_status",
          "update_status"
        ],
        "title": "CcCampaignGetResource"
      },
      "CcCampaingResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "CcCampaingResource"
      },
      "CcStatusResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number_of_leads": {
            "type": "string"
          },
          "cc_campaign": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "active": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EnumResource"
          }
        },
        "required": [
          "id",
          "name",
          "number_of_leads",
          "cc_campaign",
          "active",
          "type"
        ],
        "title": "CcStatusResource"
      },
      "CcTriggerIndexResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/CcCampaingResource"
          },
          "sql_query": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "trigger_class": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "campaign",
          "sql_query",
          "description",
          "trigger_class"
        ],
        "title": "CcTriggerIndexResource"
      },
      "ChangeLangLoggedUserRequest": {
        "type": "object",
        "properties": {
          "lang": {
            "type": "string",
            "enum": ["pl", "en"]
          }
        },
        "required": ["lang"],
        "title": "ChangeLangLoggedUserRequest"
      },
      "ChangePasswordLoggedUserRequest": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string",
            "minLength": 8
          },
          "new_password_confirmation": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": [
          "old_password",
          "new_password",
          "new_password_confirmation"
        ],
        "title": "ChangePasswordLoggedUserRequest"
      },
      "ChunkUploadAttachmentRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "sha": {
            "type": "string"
          },
          "attachment_type_id": {
            "type": ["integer", "null"]
          },
          "password": {
            "type": ["string", "null"]
          }
        },
        "required": ["file", "sha"],
        "title": "ChunkUploadAttachmentRequest"
      },
      "CityResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "CityResource"
      },
      "CityStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commune_id": {
            "type": "string"
          }
        },
        "required": ["name", "commune_id"],
        "title": "CityStoreRequest"
      },
      "CityUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commune_id": {
            "type": "string"
          }
        },
        "required": ["name", "commune_id"],
        "title": "CityUpdateRequest"
      },
      "ClaimListResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "ClaimListResource"
      },
      "ClaimValueCwtResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": ["string", "null"]
          },
          "type": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": ["string", "null"]
              }
            },
            "required": ["value", "label"]
          },
          "subtype": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": ["string", "null"]
              }
            },
            "required": ["value", "label"]
          },
          "claim_value": {
            "type": ["string", "null"]
          },
          "predictive_percent": {
            "type": ["string", "null"]
          },
          "received_value": {
            "type": ["string", "null"]
          },
          "real_cost": {
            "type": ["string", "null"]
          },
          "comments": {
            "type": ["string", "null"]
          },
          "paid_at": {
            "type": "string"
          },
          "received_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "unpaid": {
            "type": "integer"
          },
          "claim_id": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "subtype",
          "claim_value",
          "predictive_percent",
          "received_value",
          "real_cost",
          "comments",
          "paid_at",
          "received_at",
          "created_at",
          "unpaid",
          "claim_id"
        ],
        "title": "ClaimValueCwtResource"
      },
      "ClaimsForInformationPortalsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "court": {
            "$ref": "#/components/schemas/DepartmentToSelectResource"
          },
          "signatures": {
            "type": "object",
            "properties": {
              "files_signature": {
                "type": "string"
              },
              "files_signature_2": {
                "type": "string"
              },
              "km_signature": {
                "type": "string"
              }
            },
            "required": ["files_signature", "files_signature_2", "km_signature"]
          },
          "product": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "wps": {
            "type": "string"
          }
        },
        "required": ["id", "court", "signatures", "product", "status", "wps"],
        "title": "ClaimsForInformationPortalsResource"
      },
      "CommuneStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "county_id": {
            "type": "string"
          }
        },
        "required": ["name", "county_id"],
        "title": "CommuneStoreRequest"
      },
      "CommuneUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "county_id": {
            "type": "string"
          }
        },
        "required": ["name", "county_id"],
        "title": "CommuneUpdateRequest"
      },
      "CommunicateConsultantResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "consultant": {
            "type": ["string", "null"]
          },
          "consultant_title": {
            "type": ["string", "null"]
          },
          "email_from": {
            "type": ["string", "null"]
          },
          "email_sender": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "sms_sender": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "consultant",
          "consultant_title",
          "email_from",
          "email_sender",
          "phone",
          "sms_sender"
        ],
        "title": "CommunicateConsultantResource"
      },
      "CommunicateMessageEnum": {
        "type": "integer",
        "enum": [
          1007, 1008, 1018, 1028, 1134, 1140, 1079, 1401, 1402, 1403, 1404,
          1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1010, 1011, 1016,
          1020, 1124, 1200, 1201, 1300, 1301, 1400
        ],
        "title": "CommunicateMessageEnum"
      },
      "CommunicateResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "subject": {
            "type": ["string", "null"]
          },
          "tracking_link": {
            "type": ["string", "null"]
          },
          "in_select": {
            "type": "boolean"
          },
          "use_as_template": {
            "type": "boolean"
          },
          "allow_longer": {
            "type": "boolean"
          },
          "force_consultant": {
            "type": "boolean"
          },
          "specified_recipient": {
            "type": ["string", "null"]
          },
          "sent_to": {
            "type": "string"
          },
          "attach_unsubscribe_link": {
            "type": "boolean"
          },
          "do_not_send_again": {
            "type": "boolean"
          },
          "special_chars": {
            "type": "boolean"
          },
          "electronic_sign_sms_delivery": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "communicate_type": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicateScopeEnumResource"
            }
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "sites_communicate_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicateSiteTypeResource"
            }
          },
          "attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentTypeEnumResource"
            }
          },
          "consultant": {
            "$ref": "#/components/schemas/CommunicateConsultantResource"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "status": {
            "$ref": "#/components/schemas/CommunicateStatusResource"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentEnumResource"
            }
          },
          "message": {
            "type": "string"
          },
          "marketing_automation_enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "display_name",
          "subject",
          "tracking_link",
          "in_select",
          "use_as_template",
          "allow_longer",
          "force_consultant",
          "specified_recipient",
          "sent_to",
          "attach_unsubscribe_link",
          "do_not_send_again",
          "special_chars",
          "electronic_sign_sms_delivery",
          "updated_at",
          "content",
          "type",
          "communicate_type",
          "project",
          "products",
          "services",
          "scopes",
          "sites",
          "sites_communicate_types",
          "attachment_types",
          "consultant",
          "contracts",
          "status",
          "attachments",
          "message",
          "marketing_automation_enabled"
        ],
        "title": "CommunicateResource"
      },
      "CommunicateScopeEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "CommunicateScopeEnumResource"
      },
      "CommunicateSiteTypeResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "CommunicateSiteTypeResource"
      },
      "CommunicateStatusResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        },
        "required": ["value", "label", "group"],
        "title": "CommunicateStatusResource"
      },
      "CommunicateStoreUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AccountContactTypeEnum"
          },
          "communicate_type": {
            "$ref": "#/components/schemas/CommunicateTypeEnum"
          },
          "content": {
            "type": "string"
          },
          "subject": {
            "type": ["string", "null"]
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "tracking_link": {
            "type": ["string", "null"],
            "format": "uri"
          },
          "allow_longer": {
            "type": "boolean"
          },
          "allow_special_chars": {
            "type": "boolean"
          },
          "attach_unsubscribe_link": {
            "type": "boolean"
          },
          "do_not_send_again": {
            "type": "boolean"
          },
          "electronic_sign_sms_delivery": {
            "type": "boolean"
          },
          "force_consultant": {
            "type": "boolean"
          },
          "specified_recipient": {
            "type": ["string", "null"]
          },
          "sent_to": {
            "$ref": "#/components/schemas/SentToEnum"
          },
          "in_select": {
            "type": "boolean"
          },
          "use_as_template": {
            "type": "boolean"
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "project_id": {
            "type": ["integer", "null"]
          },
          "message": {
            "$ref": "#/components/schemas/CommunicateMessageEnum"
          },
          "status": {
            "type": ["string", "null"]
          },
          "attachment_files": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "marketing_automation_enabled": {
            "type": "boolean"
          },
          "attachment_types": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "contracts": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "products": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "scopes": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "services": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "detached_attachments": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "sites": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": ["integer", "null"]
                }
              },
              "required": ["id"]
            }
          }
        },
        "required": ["name", "type", "content"],
        "title": "CommunicateStoreUpdateRequest"
      },
      "CommunicateTypeEnum": {
        "type": "string",
        "enum": ["transactional", "marketing"],
        "title": "CommunicateTypeEnum"
      },
      "CompanyAccountResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "company_city": {
            "type": "string"
          },
          "company_street": {
            "type": "string"
          },
          "company_building_number": {
            "type": "string"
          },
          "company_postal_code": {
            "type": "string"
          },
          "company_flat_number": {
            "type": "string"
          },
          "company_nip": {
            "type": "string"
          },
          "company_regon": {
            "type": "string"
          },
          "company_krs": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "company_name",
          "company_city",
          "company_street",
          "company_building_number",
          "company_postal_code",
          "company_flat_number",
          "company_nip",
          "company_regon",
          "company_krs"
        ],
        "title": "CompanyAccountResource"
      },
      "CompanyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "postal_code_city": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "building_number": {
            "type": ["string", "null"]
          },
          "flat_number": {
            "type": ["string", "null"]
          },
          "nip": {
            "type": ["string", "null"]
          },
          "regon": {
            "type": ["string", "null"]
          },
          "krs": {
            "type": ["string", "null"]
          },
          "bank_account_number": {
            "type": ["string", "null"]
          },
          "represented_by": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "send_report": {
            "type": "boolean"
          },
          "send_report_to": {
            "type": ["string", "null"]
          },
          "auto_sell": {
            "type": "boolean"
          },
          "lead_accesses_per_lead": {
            "type": "integer"
          },
          "to_phone_sell": {
            "type": "boolean"
          },
          "priority": {
            "type": "string"
          },
          "parent_id": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "consultant_id": {
            "$ref": "#/components/schemas/ConsultantEnumResource"
          },
          "class_name": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": ["label", "value"]
          },
          "auto_sell_sort_class": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "value": {
                "type": ["string", "null"]
              }
            },
            "required": ["label", "value"]
          },
          "product_id": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "project_id": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "agreements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementEnumResource"
            }
          },
          "auto_sell_except_partners": {
            "type": "string"
          },
          "default_price": {
            "$ref": "#/components/schemas/CategoryPriceEnumResource"
          }
        },
        "required": [
          "id",
          "active",
          "name",
          "city",
          "postal_code",
          "postal_code_city",
          "street",
          "building_number",
          "flat_number",
          "nip",
          "regon",
          "krs",
          "bank_account_number",
          "represented_by",
          "share_capital",
          "send_report",
          "send_report_to",
          "auto_sell",
          "lead_accesses_per_lead",
          "to_phone_sell",
          "priority",
          "parent_id",
          "consultant_id",
          "class_name",
          "auto_sell_sort_class",
          "product_id",
          "project_id",
          "agreements",
          "auto_sell_except_partners",
          "default_price"
        ],
        "title": "CompanyResource"
      },
      "CompanyStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lead_accesses_per_lead": {
            "type": "integer"
          },
          "active": {
            "type": ["boolean", "null"]
          },
          "auto_sell": {
            "type": ["boolean", "null"]
          },
          "auto_sell_sort_class": {
            "$ref": "#/components/schemas/AutoSellSortClassEnum"
          },
          "bank_account_number": {
            "type": ["string", "null"]
          },
          "building_number": {
            "type": ["string", "null"]
          },
          "flat_number": {
            "type": ["string", "null"]
          },
          "city": {
            "type": ["string", "null"]
          },
          "class_name": {
            "$ref": "#/components/schemas/AccessClassEnum"
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "default_price": {
            "type": ["string", "null"]
          },
          "krs": {
            "type": ["string", "null"]
          },
          "nip": {
            "type": ["string", "null"]
          },
          "parent_id": {
            "type": ["integer", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "postal_code_city": {
            "type": ["string", "null"]
          },
          "priority": {
            "type": ["integer", "null"]
          },
          "regon": {
            "type": ["string", "null"]
          },
          "represented_by": {
            "type": ["string", "null"]
          },
          "send_report": {
            "type": ["boolean", "null"]
          },
          "send_report_to": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "to_phone_sell": {
            "type": ["boolean", "null"]
          },
          "agreements": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "auto_sell_except_partners": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "product_id": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "project_id": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name", "lead_accesses_per_lead"],
        "title": "CompanyStoreRequest"
      },
      "CompanyUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lead_accesses_per_lead": {
            "type": "integer"
          },
          "active": {
            "type": ["boolean", "null"]
          },
          "auto_sell": {
            "type": ["boolean", "null"]
          },
          "auto_sell_sort_class": {
            "$ref": "#/components/schemas/AutoSellSortClassEnum"
          },
          "bank_account_number": {
            "type": ["string", "null"]
          },
          "building_number": {
            "type": ["string", "null"]
          },
          "flat_number": {
            "type": ["string", "null"]
          },
          "city": {
            "type": ["string", "null"]
          },
          "class_name": {
            "$ref": "#/components/schemas/AccessClassEnum"
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "default_price": {
            "type": ["string", "null"]
          },
          "krs": {
            "type": ["string", "null"]
          },
          "nip": {
            "type": ["string", "null"]
          },
          "parent_id": {
            "type": ["integer", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "postal_code_city": {
            "type": ["string", "null"]
          },
          "priority": {
            "type": ["integer", "null"]
          },
          "regon": {
            "type": ["string", "null"]
          },
          "represented_by": {
            "type": ["string", "null"]
          },
          "send_report": {
            "type": ["boolean", "null"]
          },
          "send_report_to": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "to_phone_sell": {
            "type": ["boolean", "null"]
          },
          "agreements": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "auto_sell_except_partners": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "product_id": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "project_id": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name", "lead_accesses_per_lead"],
        "title": "CompanyUpdateRequest"
      },
      "ComplaintTypeEnum": {
        "type": "integer",
        "enum": [0, 1, 2, 3],
        "title": "ComplaintTypeEnum"
      },
      "ConsultantEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "ConsultantEnumResource"
      },
      "ConsultantShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "consultant": {
            "type": ["string", "null"]
          },
          "consultant_title": {
            "type": ["string", "null"]
          },
          "email_sender": {
            "type": ["string", "null"]
          },
          "email_from": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "sms_sender": {
            "type": ["string", "null"]
          },
          "message": {
            "type": ["string", "null"]
          },
          "footer": {
            "type": ["string", "null"]
          },
          "marketing_email_subject": {
            "type": ["string", "null"]
          },
          "display_logo": {
            "type": "boolean"
          },
          "display_company": {
            "type": "boolean"
          },
          "display_email": {
            "type": "boolean"
          },
          "company_address": {
            "type": ["string", "null"]
          },
          "logo_id": {
            "type": ["integer", "null"]
          },
          "logo": {
            "type": "string"
          },
          "avatar_id": {
            "type": ["integer", "null"]
          },
          "avatar": {
            "type": "string"
          },
          "footer_class": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "consultant",
          "consultant_title",
          "email_sender",
          "email_from",
          "phone",
          "sms_sender",
          "message",
          "footer",
          "marketing_email_subject",
          "display_logo",
          "display_company",
          "display_email",
          "company_address",
          "logo_id",
          "logo",
          "avatar_id",
          "avatar",
          "footer_class"
        ],
        "title": "ConsultantShowResource"
      },
      "ContractForCaseScopeResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        },
        "required": ["label", "value"],
        "title": "ContractForCaseScopeResource"
      },
      "ContractResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "group": {
            "type": ["string", "null"]
          },
          "required": {
            "type": "boolean"
          },
          "form_path": {
            "type": ["string", "null"]
          },
          "pdf_path": {
            "type": ["string", "null"]
          },
          "google_url": {
            "type": ["string", "null"]
          },
          "pdf_name_template": {
            "type": ["string", "null"]
          },
          "is_template": {
            "type": "boolean"
          },
          "requires_account": {
            "type": "boolean"
          },
          "auto_save": {
            "type": "boolean"
          },
          "available_for": {
            "type": ["string", "null"]
          },
          "type": {
            "type": "string"
          },
          "agreement_type": {
            "type": "string"
          },
          "field_name_date_signed": {
            "type": ["string", "null"]
          },
          "attachment_type": {
            "$ref": "#/components/schemas/AttachmentTypeEnumResource"
          },
          "analyzers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyzerEnumResource"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceContractResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "display_name",
          "group",
          "required",
          "form_path",
          "pdf_path",
          "google_url",
          "pdf_name_template",
          "is_template",
          "requires_account",
          "auto_save",
          "available_for",
          "type",
          "agreement_type",
          "field_name_date_signed",
          "attachment_type",
          "analyzers",
          "services"
        ],
        "title": "ContractResource"
      },
      "ContractStoreUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "pdf_name_template": {
            "type": ["string", "null"]
          },
          "group_name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "is_template": {
            "type": "boolean"
          },
          "requires_account": {
            "type": "boolean"
          },
          "auto_save": {
            "type": "boolean"
          },
          "attachment_type": {
            "type": ["integer", "null"]
          },
          "field_name_date_signed": {
            "type": ["string", "null"]
          },
          "type": {
            "$ref": "#/components/schemas/ContractTypeEnum"
          },
          "agreement_type": {
            "$ref": "#/components/schemas/AgreementTypeEnum"
          },
          "available_for": {
            "type": ["string", "null"]
          },
          "google_url": {
            "type": "string"
          },
          "analyzers": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "services": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "service_id": {
                  "type": "integer"
                },
                "scope": {
                  "type": "string"
                }
              },
              "required": ["service_id", "scope"]
            }
          }
        },
        "required": ["name", "display_name", "group_name"],
        "title": "ContractStoreUpdateRequest"
      },
      "ContractTypeEnum": {
        "type": "integer",
        "enum": [1, 2, 3],
        "title": "ContractTypeEnum"
      },
      "ContractTypeEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "ContractTypeEnumResource"
      },
      "CoownersAccountResource": {
        "type": "object",
        "properties": {
          "account_coowner_id": {
            "type": "string"
          },
          "account_coowner_first_name": {
            "type": "string"
          },
          "account_coowner_last_name": {
            "type": "string"
          },
          "account_coowner_email": {
            "type": "string"
          },
          "account_coowner_phone": {
            "type": "string"
          }
        },
        "required": [
          "account_coowner_id",
          "account_coowner_first_name",
          "account_coowner_last_name",
          "account_coowner_email",
          "account_coowner_phone"
        ],
        "title": "CoownersAccountResource"
      },
      "CountryResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "CountryResource"
      },
      "CountyStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "province_id": {
            "type": "string"
          }
        },
        "required": ["name", "province_id"],
        "title": "CountyStoreRequest"
      },
      "CountyUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "province_id": {
            "type": "string"
          }
        },
        "required": ["name", "province_id"],
        "title": "CountyUpdateRequest"
      },
      "CwtImportCsvRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "delimiter": {
            "type": ["string", "null"],
            "enum": ["", "", ";", "Revolut"]
          }
        },
        "required": ["file"],
        "title": "CwtImportCsvRequest"
      },
      "DeleteTypeEnum": {
        "type": "string",
        "enum": ["soft", "hard"],
        "title": "DeleteTypeEnum"
      },
      "DepartmentToSelectResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "DepartmentToSelectResource"
      },
      "DispatchClaimWireTransferRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_be_accounted": {
                  "type": ["string", "null"]
                },
                "claim_id": {
                  "type": "integer"
                },
                "claim_value": {
                  "type": "string"
                },
                "claim_wire_transfer_id": {
                  "type": ["string", "null"]
                },
                "claimed_at": {
                  "type": ["string", "null"]
                },
                "comments": {
                  "type": ["string", "null"]
                },
                "debtor_settlement_proposal_value": {
                  "type": ["string", "null"]
                },
                "detailed_type": {
                  "type": "string",
                  "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "31",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30"
                  ]
                },
                "exchange_rate": {
                  "type": ["string", "null"]
                },
                "id": {
                  "type": ["string", "null"]
                },
                "incomes_and_costs": {
                  "type": ["array", "null"],
                  "items": {
                    "type": "string"
                  }
                },
                "invoice_id": {
                  "type": ["integer", "null"]
                },
                "name": {
                  "type": "string"
                },
                "paid_at": {
                  "type": ["string", "null"]
                },
                "predictive_percent": {
                  "type": "string"
                },
                "real_cost": {
                  "type": ["number", "null"]
                },
                "received_at": {
                  "type": "string"
                },
                "received_value": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": ["1", "2", "3", "4", "5"]
                },
                "unpaid": {
                  "type": ["string", "null"]
                }
              },
              "required": [
                "claim_id",
                "claim_value",
                "detailed_type",
                "name",
                "predictive_percent",
                "received_at",
                "received_value",
                "type"
              ]
            }
          }
        },
        "title": "DispatchClaimWireTransferRequest"
      },
      "EnumAttachmentPasswordResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["value", "label", "password"],
        "title": "EnumAttachmentPasswordResource"
      },
      "EnumCastResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumCastResource"
      },
      "EnumConsultantResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumConsultantResource"
      },
      "EnumDistributionClassResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumDistributionClassResource"
      },
      "EnumDistributionResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumDistributionResource"
      },
      "EnumLangResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label_pl": {
            "type": "string"
          },
          "label_en": {
            "type": "string"
          }
        },
        "required": ["value", "label_pl", "label_en"],
        "title": "EnumLangResource"
      },
      "EnumNameResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumNameResource"
      },
      "EnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumResource"
      },
      "EnumRoleResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumRoleResource"
      },
      "EnumRouteResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "EnumRouteResource"
      },
      "ExtendedPortalDocumentsDeliveryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "read_at": {
            "type": ["string", "null"]
          },
          "assigned_to": {
            "type": "object",
            "properties": {
              "model_type": {
                "type": "string"
              },
              "model_id": {
                "type": "string"
              }
            },
            "required": ["model_type", "model_id"]
          },
          "file": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": ["string", "null"]
              }
            },
            "required": ["name", "url"]
          }
        },
        "required": ["id", "created_at", "read_at", "assigned_to", "file"],
        "title": "ExtendedPortalDocumentsDeliveryResource"
      },
      "FilterTemplateResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          },
          "filters": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["label", "value", "filters"],
        "title": "FilterTemplateResource"
      },
      "FilterTemplateRouteResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "FilterTemplateRouteResource"
      },
      "FilterTemplateStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "route": {
            "type": "string"
          },
          "filters": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "string"
              },
              "selects": {
                "type": "string"
              },
              "dates": {
                "type": "string"
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name", "route"],
        "title": "FilterTemplateStoreRequest"
      },
      "FilterTemplateUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filters": {
            "type": "object",
            "properties": {
              "filters": {
                "type": "string"
              },
              "selects": {
                "type": "string"
              },
              "dates": {
                "type": "string"
              }
            }
          }
        },
        "required": ["name"],
        "title": "FilterTemplateUpdateRequest"
      },
      "FolderClassEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "FolderClassEnumResource"
      },
      "FolderClassShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "english_name": {
            "type": ["string", "null"]
          },
          "polish_name": {
            "type": ["string", "null"]
          },
          "check_duplicates": {
            "type": ["boolean", "null"]
          },
          "show_attachments_list": {
            "type": ["boolean", "null"]
          },
          "can_multiple_send_to_user": {
            "type": "boolean"
          },
          "user_from_analyzer_company": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderClassUsersResource"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractTypeEnumResource"
            }
          },
          "display_attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentTypeEnumResource"
            }
          },
          "upload_attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentTypeEnumResource"
            }
          }
        },
        "required": [
          "id",
          "english_name",
          "polish_name",
          "check_duplicates",
          "show_attachments_list",
          "can_multiple_send_to_user",
          "user_from_analyzer_company",
          "users",
          "contracts",
          "display_attachment_types",
          "upload_attachment_types"
        ],
        "title": "FolderClassShowResource"
      },
      "FolderClassUpdateRequest": {
        "type": "object",
        "properties": {
          "english_name": {
            "type": ["string", "null"]
          },
          "polish_name": {
            "type": ["string", "null"]
          },
          "check_duplicates": {
            "type": "boolean"
          },
          "show_attachments_list": {
            "type": "boolean"
          },
          "can_multiple_send_to_user": {
            "type": "boolean"
          },
          "user_from_analyzer_company": {
            "type": "boolean"
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "display_attachment_types": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "upload_attachment_types": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "default_checked": {
                  "type": "boolean"
                },
                "dw_email": {
                  "type": ["string", "null"]
                },
                "distribution": {
                  "type": ["string", "null"]
                },
                "distribution_class": {
                  "type": ["string", "null"]
                }
              },
              "required": ["id", "default_checked"]
            }
          }
        },
        "required": [
          "english_name",
          "polish_name",
          "check_duplicates",
          "show_attachments_list",
          "can_multiple_send_to_user",
          "user_from_analyzer_company"
        ],
        "title": "FolderClassUpdateRequest"
      },
      "FolderClassUpdateResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "english_name": {
            "type": ["string", "null"]
          },
          "polish_name": {
            "type": ["string", "null"]
          },
          "check_duplicates": {
            "type": ["boolean", "null"]
          },
          "show_attachments_list": {
            "type": ["boolean", "null"]
          },
          "can_multiple_send_to_user": {
            "type": "boolean"
          },
          "user_from_analyzer_company": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderClassUsersUpdateResource"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractTypeEnumResource"
            }
          },
          "display_attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentTypeEnumResource"
            }
          },
          "upload_attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentTypeEnumResource"
            }
          }
        },
        "required": [
          "id",
          "english_name",
          "polish_name",
          "check_duplicates",
          "show_attachments_list",
          "can_multiple_send_to_user",
          "user_from_analyzer_company",
          "users",
          "contracts",
          "display_attachment_types",
          "upload_attachment_types"
        ],
        "title": "FolderClassUpdateResource"
      },
      "FolderClassUsersResource": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEnumResource"
          },
          "dw_email": {
            "type": "string"
          },
          "distribution": {
            "$ref": "#/components/schemas/EnumDistributionResource"
          },
          "distribution_class": {
            "$ref": "#/components/schemas/EnumDistributionClassResource"
          },
          "default_checked": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "dw_email",
          "distribution",
          "distribution_class",
          "default_checked"
        ],
        "title": "FolderClassUsersResource"
      },
      "FolderClassUsersUpdateResource": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEnumResource"
          },
          "dw_email": {
            "type": "string"
          },
          "distribution": {
            "type": "string"
          },
          "distribution_class": {
            "type": "string"
          },
          "default_checked": {
            "type": "boolean"
          }
        },
        "required": [
          "user",
          "dw_email",
          "distribution",
          "distribution_class",
          "default_checked"
        ],
        "title": "FolderClassUsersUpdateResource"
      },
      "GmailMailShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "mail_id": {
            "type": "string"
          },
          "thread_id": {
            "type": ["string", "null"]
          },
          "header_message_id": {
            "type": ["string", "null"]
          },
          "recipient": {
            "type": ["string", "null"]
          },
          "sender": {
            "type": ["string", "null"]
          },
          "sender_name": {
            "type": "string"
          },
          "subject": {
            "type": ["string", "null"]
          },
          "lead_id": {
            "type": ["integer", "null"]
          },
          "account_id": {
            "type": ["integer", "null"]
          },
          "message_attachment_id": {
            "type": ["integer", "null"]
          },
          "status": {
            "$ref": "#/components/schemas/EnumCastResource"
          },
          "user": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "received_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "content": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "mail_id",
          "thread_id",
          "header_message_id",
          "recipient",
          "sender",
          "sender_name",
          "subject",
          "lead_id",
          "account_id",
          "message_attachment_id",
          "status",
          "user",
          "received_at",
          "updated_at",
          "created_at",
          "content"
        ],
        "title": "GmailMailShowResource"
      },
      "GmailMailStatusEnum": {
        "type": "integer",
        "enum": [100, 200, 300],
        "title": "GmailMailStatusEnum"
      },
      "IncomeAndCostSumResource": {
        "type": "object",
        "properties": {
          "value_brutto_sum": {
            "type": "string"
          },
          "value_netto_sum": {
            "type": "string"
          },
          "tax_sum": {
            "type": "string"
          }
        },
        "required": ["value_brutto_sum", "value_netto_sum", "tax_sum"],
        "title": "IncomeAndCostSumResource"
      },
      "IncomesAndCostsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "service": {
            "$ref": "#/components/schemas/ServiceEnumResource"
          },
          "analyzer_id": {
            "type": "string"
          },
          "opportunity_id": {
            "type": "string"
          },
          "purchase_id": {
            "type": "string"
          },
          "claim_id": {
            "type": "string"
          },
          "claim_value_id": {
            "type": "string"
          },
          "filled_contract_id": {
            "type": "string"
          },
          "attachment_id": {
            "type": "string"
          },
          "parent_id": {
            "type": "string"
          },
          "future_profit": {
            "type": "string"
          },
          "value_brutto": {
            "type": "string"
          },
          "value_netto": {
            "type": "string"
          },
          "corrected": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "canceled_type": {
            "type": "string"
          },
          "contract_signed_at": {
            "type": "string"
          },
          "locked_at": {
            "type": "string"
          },
          "paid_at": {
            "type": "string"
          },
          "accounted_for_at": {
            "type": "string"
          },
          "canceled_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "service",
          "analyzer_id",
          "opportunity_id",
          "purchase_id",
          "claim_id",
          "claim_value_id",
          "filled_contract_id",
          "attachment_id",
          "parent_id",
          "future_profit",
          "value_brutto",
          "value_netto",
          "corrected",
          "type",
          "subtype",
          "canceled_type",
          "contract_signed_at",
          "locked_at",
          "paid_at",
          "accounted_for_at",
          "canceled_at"
        ],
        "title": "IncomesAndCostsResource"
      },
      "IndexCategoryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "consultant": {
            "$ref": "#/components/schemas/EnumConsultantResource"
          }
        },
        "required": ["id", "name", "archived", "site", "consultant"],
        "title": "IndexCategoryResource"
      },
      "IndexProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cc_phone": {
            "type": "string"
          },
          "check_partners": {
            "type": "string"
          },
          "archived": {
            "type": "string"
          },
          "gmail_labels": {
            "type": "string"
          },
          "lead_price": {
            "type": "string"
          },
          "free_leads": {
            "type": "string"
          },
          "sell_limit": {
            "type": "string"
          },
          "consultant": {
            "$ref": "#/components/schemas/EnumConsultantResource"
          },
          "site": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "attachment_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "cc_phone",
          "check_partners",
          "archived",
          "gmail_labels",
          "lead_price",
          "free_leads",
          "sell_limit",
          "consultant",
          "site",
          "attachment_types"
        ],
        "title": "IndexProjectResource"
      },
      "IndexRoleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumRouteResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "permissions",
          "routes"
        ],
        "title": "IndexRoleResource"
      },
      "IndexTodoTaskResource": {
        "type": "string",
        "title": "IndexTodoTaskResource"
      },
      "InvoiceSumResource": {
        "type": "object",
        "properties": {
          "quantity_sum": {
            "type": "string"
          },
          "tax_value_sum": {
            "type": "string"
          },
          "value_gross_sum": {
            "type": "string"
          }
        },
        "required": ["quantity_sum", "tax_value_sum", "value_gross_sum"],
        "title": "InvoiceSumResource"
      },
      "KeysMappingResource": {
        "type": "object",
        "properties": {
          "mapping_key": {
            "type": "string"
          },
          "new_name_key": {
            "type": "string"
          }
        },
        "required": ["mapping_key", "new_name_key"],
        "title": "KeysMappingResource"
      },
      "LeadEditAttachmentsDirectoryResource": {
        "type": "string",
        "title": "LeadEditAttachmentsDirectoryResource"
      },
      "LeadPriceEnum": {
        "type": "string",
        "enum": ["equals", "greater_equals", "greater"],
        "title": "LeadPriceEnum"
      },
      "LeadsResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "LeadsResource"
      },
      "LinkableAttachmentResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "LinkableAttachmentResource"
      },
      "LinksResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "LinksResource"
      },
      "LocationStoreRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "city_id": {
            "type": "string"
          }
        },
        "required": ["code", "city_id"],
        "title": "LocationStoreRequest"
      },
      "LocationUpdateRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "city_id": {
            "type": "string"
          }
        },
        "required": ["code", "city_id"],
        "title": "LocationUpdateRequest"
      },
      "MalfunctionCheckerConditionEnum": {
        "type": "string",
        "enum": [
          "Modules\\Crm\\Classes\\MalfunctionChecker\\Conditions\\LeadProduct",
          "Modules\\Crm\\Classes\\MalfunctionChecker\\Conditions\\LeadProjectSite",
          "Modules\\Crm\\Classes\\MalfunctionChecker\\Conditions\\LeadRedirectedFrom"
        ],
        "title": "MalfunctionCheckerConditionEnum"
      },
      "MalfunctionCheckerConditionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "conditionable": {
            "type": "string"
          },
          "minutes_to_wait": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["id", "conditionable", "minutes_to_wait", "value"],
        "title": "MalfunctionCheckerConditionResource"
      },
      "MalfunctionCheckerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "monitor_start_at": {
            "type": "string"
          },
          "monitor_end_at": {
            "type": "string"
          },
          "json": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MalfunctionCheckerConditionResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "active",
          "monitor_start_at",
          "monitor_end_at",
          "json",
          "conditions"
        ],
        "title": "MalfunctionCheckerResource"
      },
      "MalfunctionCheckerStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "monitor_start_at": {
            "type": "string"
          },
          "monitor_end_at": {
            "type": "string"
          },
          "json": {
            "type": "object",
            "properties": {
              "contacts": {
                "type": "string"
              }
            },
            "required": ["contacts"]
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "conditionable": {
                  "$ref": "#/components/schemas/MalfunctionCheckerConditionEnum"
                },
                "value": {
                  "type": "string"
                },
                "minutes_to_wait": {
                  "type": "number"
                }
              },
              "required": ["value", "minutes_to_wait"]
            }
          }
        },
        "required": ["name", "active", "monitor_start_at", "monitor_end_at"],
        "title": "MalfunctionCheckerStoreRequest"
      },
      "MalfunctionCheckerUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "monitor_start_at": {
            "type": "string"
          },
          "monitor_end_at": {
            "type": "string"
          },
          "json": {
            "type": "object",
            "properties": {
              "contacts": {
                "type": "string"
              }
            },
            "required": ["contacts"]
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": ["integer", "null"]
                },
                "conditionable": {
                  "$ref": "#/components/schemas/MalfunctionCheckerConditionEnum"
                },
                "value": {
                  "type": "string"
                },
                "minutes_to_wait": {
                  "type": "number"
                }
              },
              "required": ["value", "minutes_to_wait"]
            }
          }
        },
        "required": ["name", "active", "monitor_start_at", "monitor_end_at"],
        "title": "MalfunctionCheckerUpdateRequest"
      },
      "MassDeleteAttachmentRequest": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["attachments"],
        "title": "MassDeleteAttachmentRequest"
      },
      "MoveAttachmentDirectoryRequest": {
        "type": "object",
        "properties": {
          "attachmentDirectoryId": {
            "type": "integer"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": ["files"],
        "title": "MoveAttachmentDirectoryRequest"
      },
      "NotificationAdditionalInformationResource": {
        "type": "string",
        "title": "NotificationAdditionalInformationResource"
      },
      "NotificationDefinitionEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "NotificationDefinitionEnumResource"
      },
      "NotificationDefinitionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": ["string", "null"]
          },
          "must_be_confirmed": {
            "type": "boolean"
          },
          "read_by_one_from_team": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "must_be_confirmed",
          "read_by_one_from_team",
          "users",
          "teams"
        ],
        "title": "NotificationDefinitionResource"
      },
      "NotificationLinkResource": {
        "type": "object",
        "properties": {
          "pathname": {
            "type": ["string", "null"]
          },
          "type": {
            "type": ["string", "null"]
          },
          "linkable_id": {
            "type": ["integer", "null"]
          }
        },
        "required": ["pathname", "type", "linkable_id"],
        "title": "NotificationLinkResource"
      },
      "NotificationNavbarResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "read_at": {
            "type": ["string", "null"]
          },
          "url": {
            "type": "string"
          },
          "link": {
            "$ref": "#/components/schemas/NotificationLinkResource"
          },
          "additional_information": {
            "$ref": "#/components/schemas/NotificationAdditionalInformationResource"
          }
        },
        "required": [
          "id",
          "title",
          "body",
          "created_at",
          "read_at",
          "url",
          "link",
          "additional_information"
        ],
        "title": "NotificationNavbarResource"
      },
      "NotificationReadDestroyRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "NotificationReadDestroyRequest"
      },
      "NotificationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "lead_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "event_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          },
          "definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NotificationDefinitionEnumResource"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "type": "string"
          },
          "read_at": {
            "type": ["string", "null"]
          },
          "type": {
            "type": "string"
          },
          "must_be_confirmed": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinksResource"
            }
          },
          "class": {
            "$ref": "#/components/schemas/ObjectableResource"
          },
          "user": {
            "$ref": "#/components/schemas/UserEnumResource"
          },
          "product": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductEnumResource"
              },
              {
                "type": "null"
              }
            ]
          },
          "service": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceEnumResource"
              },
              {
                "type": "null"
              }
            ]
          },
          "link": {
            "$ref": "#/components/schemas/NotificationLinkResource"
          }
        },
        "required": [
          "id",
          "body",
          "lead_id",
          "title",
          "event_id",
          "entity_id",
          "definition",
          "url",
          "read_at",
          "type",
          "must_be_confirmed",
          "created_at",
          "links",
          "class",
          "user",
          "product",
          "service",
          "link"
        ],
        "title": "NotificationResource"
      },
      "NotificationTitleResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "NotificationTitleResource"
      },
      "ObjectableResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "ObjectableResource"
      },
      "PayerInvoiceResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "post_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "required": ["name", "post_code", "city", "address"],
        "title": "PayerInvoiceResource"
      },
      "PermissionResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "enum": {
            "type": ["string", "null"]
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          }
        },
        "required": ["id", "enum", "name", "display_name", "description"],
        "title": "PermissionResource"
      },
      "PortalCaseResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "claim_id": {
            "type": ["integer", "null"]
          }
        },
        "required": ["id", "claim_id"],
        "title": "PortalCaseResource"
      },
      "PortalDocumentIndexResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "claim_id": {
            "type": "string"
          },
          "portal_case_id": {
            "type": "string"
          },
          "portal_delivery_id": {
            "type": "string"
          },
          "court": {
            "$ref": "#/components/schemas/DepartmentToSelectResource"
          },
          "court_from_json": {
            "type": "string"
          },
          "delivered_at": {
            "type": ["string", "null"]
          },
          "signature": {
            "type": "string"
          },
          "file": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": ["string", "null"]
              }
            },
            "required": ["name", "url"]
          },
          "wps": {
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "against": {
            "type": "string"
          },
          "publication_date": {
            "type": ["string", "null"]
          },
          "read_at": {
            "type": ["string", "null"]
          },
          "document_type": {
            "type": "string"
          },
          "created_at": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "claim_id",
          "portal_case_id",
          "portal_delivery_id",
          "court",
          "court_from_json",
          "delivered_at",
          "signature",
          "file",
          "wps",
          "active",
          "against",
          "publication_date",
          "read_at",
          "document_type",
          "created_at"
        ],
        "title": "PortalDocumentIndexResource"
      },
      "PortalDocumentTypeEnum": {
        "type": "integer",
        "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
        "title": "PortalDocumentTypeEnum"
      },
      "PortalEnum": {
        "type": "string",
        "enum": [
          "https://portal.wroclaw.sa.gov.pl/bialystok/api",
          "https://portal.wroclaw.sa.gov.pl/gdansk/api",
          "https://portal.wroclaw.sa.gov.pl/katowice/api",
          "https://portal.wroclaw.sa.gov.pl/krakow/api",
          "https://portal.wroclaw.sa.gov.pl/lublin/api",
          "https://portal.wroclaw.sa.gov.pl/lodz/api",
          "https://portal.wroclaw.sa.gov.pl/poznan/api",
          "https://portal.wroclaw.sa.gov.pl/rzeszow/api",
          "https://portal.wroclaw.sa.gov.pl/szczecin/api",
          "https://portal.wroclaw.sa.gov.pl/warszawa/api",
          "https://portal.wroclaw.sa.gov.pl/wroclaw/api",
          "https://testapi.wroclaw.sa.gov.pl/api"
        ],
        "title": "PortalEnum"
      },
      "PostalCodeFullResource": {
        "type": "object",
        "properties": {
          "raw_code": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "latitude": {
            "type": ["string", "null"]
          },
          "longitude": {
            "type": ["string", "null"]
          },
          "checked": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "raw_code",
          "code",
          "latitude",
          "longitude",
          "checked",
          "created_at",
          "updated_at"
        ],
        "title": "PostalCodeFullResource"
      },
      "PostalCodeResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "PostalCodeResource"
      },
      "PostalCodeStoreRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "checked": {
            "type": "boolean"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          }
        },
        "required": ["code", "checked", "latitude", "longitude"],
        "title": "PostalCodeStoreRequest"
      },
      "PostalCodeUpdateRequest": {
        "type": "object",
        "properties": {
          "checked": {
            "type": "boolean"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          }
        },
        "required": ["checked", "latitude", "longitude"],
        "title": "PostalCodeUpdateRequest"
      },
      "PrintRequest": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "model_id": {
            "type": "integer",
            "minimum": 1
          },
          "print_driver": {
            "type": "string",
            "enum": ["App\\Webservices\\Printers\\PrintDrivers\\PrintTool"]
          },
          "copies": {
            "type": "integer",
            "minimum": 1
          },
          "printer": {
            "type": "string"
          },
          "duplex": {
            "type": "boolean"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string"
                },
                "file_type": {
                  "type": "string"
                },
                "file_id": {
                  "type": "integer"
                },
                "order": {
                  "type": "integer"
                },
                "copies": {
                  "type": "integer",
                  "minimum": 1
                },
                "pages": {
                  "type": ["string", "null"]
                },
                "scale": {
                  "type": ["integer", "null"]
                }
              },
              "required": [
                "file_name",
                "file_type",
                "file_id",
                "order",
                "copies"
              ]
            }
          }
        },
        "required": [
          "model",
          "model_id",
          "print_driver",
          "copies",
          "printer",
          "duplex",
          "files"
        ],
        "title": "PrintRequest"
      },
      "PrintTemplateListResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "print_template_id": {
            "type": "integer"
          },
          "copies": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "printable_id": {
            "type": ["integer", "null"]
          },
          "printable_type": {
            "type": ["string", "null"]
          },
          "folder_name": {
            "type": ["string", "null"]
          },
          "pages": {
            "type": ["string", "null"]
          },
          "scale": {
            "type": ["integer", "null"]
          }
        },
        "required": [
          "id",
          "print_template_id",
          "copies",
          "order",
          "printable_id",
          "printable_type",
          "folder_name",
          "pages",
          "scale"
        ],
        "title": "PrintTemplateListResource"
      },
      "PrintTemplateToPrintMissingResource": {
        "type": "object",
        "properties": {
          "printable_type": {
            "type": ["string", "null"]
          },
          "printable_id": {
            "type": ["integer", "null"]
          },
          "folder_name": {
            "type": ["string", "null"]
          }
        },
        "required": ["printable_type", "printable_id", "folder_name"],
        "title": "PrintTemplateToPrintMissingResource"
      },
      "PrintTemplateToPrintResource": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "model_id": {
            "type": "string"
          },
          "ready_to_print": {
            "type": "string"
          },
          "unsupported": {
            "type": "string"
          },
          "missing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintTemplateToPrintMissingResource"
            }
          }
        },
        "required": [
          "model",
          "model_id",
          "ready_to_print",
          "unsupported",
          "missing"
        ],
        "title": "PrintTemplateToPrintResource"
      },
      "ProducerShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sorting_priority": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "krs": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "regon": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "active",
          "short_name",
          "description",
          "sorting_priority",
          "street",
          "city",
          "postal_code",
          "krs",
          "nip",
          "regon",
          "created_at",
          "site",
          "products"
        ],
        "title": "ProducerShowResource"
      },
      "ProducerStoreRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "city": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "krs": {
            "type": ["string", "null"]
          },
          "name": {
            "type": "string"
          },
          "nip": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": "string"
          },
          "regon": {
            "type": ["string", "null"]
          },
          "short_name": {
            "type": ["string", "null"]
          },
          "site": {
            "type": ["integer", "null"]
          },
          "sorting_priority": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "products": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "active",
          "city",
          "description",
          "name",
          "postal_code",
          "sorting_priority",
          "street"
        ],
        "title": "ProducerStoreRequest"
      },
      "ProducerUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "city": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "krs": {
            "type": ["string", "null"]
          },
          "name": {
            "type": "string"
          },
          "nip": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": "string"
          },
          "regon": {
            "type": ["string", "null"]
          },
          "short_name": {
            "type": ["string", "null"]
          },
          "site": {
            "type": ["integer", "null"]
          },
          "sorting_priority": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "products": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "active",
          "city",
          "description",
          "name",
          "postal_code",
          "sorting_priority",
          "street"
        ],
        "title": "ProducerUpdateRequest"
      },
      "ProductEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "ProductEnumResource"
      },
      "ProductResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "category_id": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "active": {
            "type": "boolean"
          },
          "mails": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "archived": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "category_id",
          "active",
          "mails",
          "archived",
          "statuses"
        ],
        "title": "ProductResource"
      },
      "ProjectIdNameResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "ProjectIdNameResource"
      },
      "ProjectSiteEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": ["string", "null"]
          }
        },
        "required": ["value", "label"],
        "title": "ProjectSiteEnumResource"
      },
      "ProjectSiteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "consultant_id": {
            "$ref": "#/components/schemas/EnumConsultantResource"
          },
          "project_id": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "module_id": {
            "type": ["object", "null"],
            "properties": {
              "value": {
                "type": ["string", "null"]
              },
              "label": {
                "type": ["string", "null"]
              }
            },
            "required": ["value", "label"]
          },
          "site_name": {
            "type": ["string", "null"]
          },
          "partner_register_url": {
            "type": ["string", "null"]
          },
          "cc_phone": {
            "type": ["string", "null"]
          },
          "archived": {
            "type": "boolean"
          },
          "mail_server": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "name",
          "consultant_id",
          "project_id",
          "module_id",
          "site_name",
          "partner_register_url",
          "cc_phone",
          "archived",
          "mail_server"
        ],
        "title": "ProjectSiteResource"
      },
      "ProjectSiteStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 191
          },
          "project_id": {
            "type": "integer"
          },
          "module_id": {
            "type": "string",
            "maxLength": 191
          },
          "site_name": {
            "type": "string",
            "maxLength": 191
          },
          "partner_register_url": {
            "type": ["string", "null"],
            "maxLength": 191
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "cc_phone": {
            "type": ["string", "null"],
            "maxLength": 191
          },
          "archived": {
            "type": ["boolean", "null"]
          },
          "mail_server": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "project_id", "module_id", "site_name"],
        "title": "ProjectSiteStoreRequest"
      },
      "ProjectSiteUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 191
          },
          "project_id": {
            "type": "integer"
          },
          "module_id": {
            "type": "string",
            "maxLength": 191
          },
          "site_name": {
            "type": "string",
            "maxLength": 191
          },
          "partner_register_url": {
            "type": ["string", "null"],
            "maxLength": 191
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "cc_phone": {
            "type": ["string", "null"],
            "maxLength": 191
          },
          "archived": {
            "type": ["boolean", "null"]
          },
          "mail_server": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "project_id", "module_id", "site_name"],
        "title": "ProjectSiteUpdateRequest"
      },
      "ProvinceResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["value", "label"],
        "title": "ProvinceResource"
      },
      "ProvinceUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "country_id": {
            "type": "string"
          }
        },
        "required": ["name", "country_id"],
        "title": "ProvinceUpdateRequest"
      },
      "RankingCompanyDetailsForCompanyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sponsored": {
            "type": "string"
          },
          "display_opinions": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "short_name",
          "description",
          "sponsored",
          "display_opinions",
          "html",
          "category"
        ],
        "title": "RankingCompanyDetailsForCompanyResource"
      },
      "RankingCompanyResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "show_in_crm": {
            "type": "boolean"
          },
          "show_opinions": {
            "type": "boolean"
          },
          "show_ratings": {
            "type": "boolean"
          },
          "business_type": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "registration_date": {
            "type": ["string", "null"]
          },
          "registration_authority": {
            "type": ["string", "null"]
          },
          "company_management": {
            "type": ["string", "null"]
          },
          "country": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "province": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "building_number": {
            "type": "string"
          },
          "flat_number": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "krs": {
            "type": "string"
          },
          "nip": {
            "type": "string"
          },
          "regon": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RankingCompanyDetailsForCompanyResource"
            }
          }
        },
        "required": [
          "id",
          "active",
          "name",
          "slug",
          "show_in_crm",
          "show_opinions",
          "show_ratings",
          "business_type",
          "share_capital",
          "registration_date",
          "registration_authority",
          "company_management",
          "country",
          "province",
          "city",
          "street",
          "building_number",
          "flat_number",
          "postal_code",
          "krs",
          "nip",
          "regon",
          "details"
        ],
        "title": "RankingCompanyResource"
      },
      "RankingCompanyStoreRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "show_in_crm": {
            "type": "boolean"
          },
          "show_ratings": {
            "type": "boolean"
          },
          "show_opinions": {
            "type": "boolean"
          },
          "business_type": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "registration_date": {
            "type": ["string", "null"]
          },
          "registration_authority": {
            "type": ["string", "null"]
          },
          "company_management": {
            "type": ["string", "null"]
          },
          "country_id": {
            "type": ["integer", "null"]
          },
          "province_id": {
            "type": ["integer", "null"]
          },
          "city": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "building_number": {
            "type": ["string", "null"]
          },
          "flat_number": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "krs": {
            "type": ["string", "null"]
          },
          "nip": {
            "type": ["string", "null"]
          },
          "regon": {
            "type": ["string", "null"]
          },
          "details": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "integer"
                },
                "sponsored": {
                  "type": "boolean"
                },
                "display_opinions": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": ["string", "null"]
                },
                "description": {
                  "type": ["string", "null"]
                },
                "html": {
                  "type": ["string", "null"]
                }
              },
              "required": ["category", "sponsored", "display_opinions"]
            }
          }
        },
        "required": [
          "active",
          "name",
          "slug",
          "show_in_crm",
          "show_ratings",
          "show_opinions"
        ],
        "title": "RankingCompanyStoreRequest"
      },
      "RankingCompanyUpdateRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "show_in_crm": {
            "type": "boolean"
          },
          "show_ratings": {
            "type": "boolean"
          },
          "show_opinions": {
            "type": "boolean"
          },
          "business_type": {
            "type": ["string", "null"]
          },
          "share_capital": {
            "type": ["string", "null"]
          },
          "registration_date": {
            "type": ["string", "null"]
          },
          "registration_authority": {
            "type": ["string", "null"]
          },
          "company_management": {
            "type": ["string", "null"]
          },
          "country_id": {
            "type": ["integer", "null"]
          },
          "province_id": {
            "type": ["integer", "null"]
          },
          "city": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "building_number": {
            "type": ["string", "null"]
          },
          "flat_number": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "krs": {
            "type": ["string", "null"]
          },
          "nip": {
            "type": ["string", "null"]
          },
          "regon": {
            "type": ["string", "null"]
          },
          "details": {
            "type": ["array", "null"],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": ["integer", "null"]
                },
                "category": {
                  "type": "integer"
                },
                "sponsored": {
                  "type": "boolean"
                },
                "display_opinions": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": ["string", "null"]
                },
                "description": {
                  "type": ["string", "null"]
                },
                "html": {
                  "type": ["string", "null"]
                }
              },
              "required": ["category", "sponsored", "display_opinions"]
            }
          }
        },
        "required": [
          "active",
          "name",
          "slug",
          "show_in_crm",
          "show_ratings",
          "show_opinions"
        ],
        "title": "RankingCompanyUpdateRequest"
      },
      "RestorePortalModelRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["ids"],
        "title": "RestorePortalModelRequest"
      },
      "RoleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "enum": {
            "type": ["string", "null"]
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          }
        },
        "required": ["id", "enum", "name", "display_name", "description"],
        "title": "RoleResource"
      },
      "SelfServiceAttachmentResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "download_url": {
            "type": ["string", "null"]
          },
          "can_be_managed": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "password",
          "size",
          "download_url",
          "can_be_managed"
        ],
        "title": "SelfServiceAttachmentResource"
      },
      "SelfServiceCompleteStageRequest": {
        "type": "object",
        "properties": {
          "stage": {
            "$ref": "#/components/schemas/SelfServiceStatusEnum"
          },
          "lead_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["stage", "lead_id"],
        "title": "SelfServiceCompleteStageRequest"
      },
      "SelfServiceInsuranceCompanyEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        },
        "required": ["label", "value"],
        "title": "SelfServiceInsuranceCompanyEnumResource"
      },
      "SelfServiceShowAccountResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": ["string", "null"]
          },
          "email": {
            "type": ["string", "null"]
          }
        },
        "required": ["name", "phone", "email"],
        "title": "SelfServiceShowAccountResource"
      },
      "SelfServiceShowOfferResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "null"
          },
          "expire_date": {
            "type": "null"
          }
        },
        "required": ["id", "expire_date"],
        "title": "SelfServiceShowOfferResource"
      },
      "SelfServiceShowProductResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": ["integer", "null"]
          },
          "additional_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SelfServiceShowProductSzkodaNaPojezdzieResource"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": ["id", "additional_info"],
        "title": "SelfServiceShowProductResource"
      },
      "SelfServiceShowProductSzkodaNaPojezdzieResource": {
        "type": "object",
        "properties": {
          "car": {
            "type": "string"
          },
          "car_year": {
            "type": "string"
          }
        },
        "required": ["car", "car_year"],
        "title": "SelfServiceShowProductSzkodaNaPojezdzieResource"
      },
      "SelfServiceShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/SelfServiceShowProductResource"
          },
          "offer": {
            "$ref": "#/components/schemas/SelfServiceShowOfferResource"
          },
          "user": {
            "$ref": "#/components/schemas/SelfServiceShowAccountResource"
          },
          "crm_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SelfServiceShowUserResource"
              },
              {
                "type": "null"
              }
            ]
          },
          "payload": {
            "type": ["string", "null"]
          },
          "stage": {
            "type": "string"
          },
          "step": {
            "type": "string"
          },
          "consultant_completed_at": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "product",
          "offer",
          "user",
          "crm_user",
          "payload",
          "stage",
          "step",
          "consultant_completed_at"
        ],
        "title": "SelfServiceShowResource"
      },
      "SelfServiceShowUserResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": ["name", "avatar"],
        "title": "SelfServiceShowUserResource"
      },
      "SelfServiceStatusEnum": {
        "type": "string",
        "enum": [
          "stage_I",
          "stage_I_finished",
          "stage_II",
          "finished",
          "not_qualified",
          "contact_us"
        ],
        "title": "SelfServiceStatusEnum"
      },
      "SelfServiceStepEnum": {
        "type": "string",
        "enum": [
          "start",
          "damage_verification",
          "documents",
          "additional_information",
          "completing_documents",
          "finished"
        ],
        "title": "SelfServiceStepEnum"
      },
      "SelfServiceStoreAttachmentRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "attachment_type_id": {
            "type": ["integer", "null"]
          },
          "sha": {
            "type": "string"
          },
          "lead_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["file", "sha", "lead_id"],
        "title": "SelfServiceStoreAttachmentRequest"
      },
      "SelfServiceUpdateAttachmentRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "lead_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["password", "lead_id"],
        "title": "SelfServiceUpdateAttachmentRequest"
      },
      "SelfServiceUpdateRequest": {
        "type": "object",
        "properties": {
          "form_data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lead_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["form_data", "lead_id"],
        "title": "SelfServiceUpdateRequest"
      },
      "SelfServiceUpdateStepRequest": {
        "type": "object",
        "properties": {
          "step": {
            "$ref": "#/components/schemas/SelfServiceStepEnum"
          },
          "lead_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          }
        },
        "required": ["step", "lead_id"],
        "title": "SelfServiceUpdateStepRequest"
      },
      "SellerInvoiceResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "post_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "required": ["name", "post_code", "city", "address"],
        "title": "SellerInvoiceResource"
      },
      "SentToEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 5],
        "title": "SentToEnum"
      },
      "ServiceContractResource": {
        "type": "object",
        "properties": {
          "service": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "scope": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          }
        },
        "required": ["service", "scope"],
        "title": "ServiceContractResource"
      },
      "ServiceEnumResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "ServiceEnumResource"
      },
      "ShowAccountResource": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string"
          },
          "account_first_name": {
            "type": "string"
          },
          "account_last_name": {
            "type": "string"
          },
          "account_email": {
            "type": "string"
          },
          "account_phone": {
            "type": "string"
          },
          "account_extra_phone": {
            "type": "string"
          },
          "additional_informations": {
            "$ref": "#/components/schemas/AdditionalInformationAccountResource"
          },
          "account_foreigner": {
            "type": "boolean"
          },
          "account_foreigner_postal_code": {
            "type": "string"
          },
          "account_local": {
            "type": "string"
          },
          "coowners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoownersAccountResource"
            }
          },
          "company": {
            "$ref": "#/components/schemas/CompanyAccountResource"
          },
          "tax": {
            "$ref": "#/components/schemas/TaxAccountResource"
          },
          "address": {
            "$ref": "#/components/schemas/AddressAccountResource"
          }
        },
        "required": [
          "account_id",
          "account_first_name",
          "account_last_name",
          "account_email",
          "account_phone",
          "account_extra_phone",
          "additional_informations",
          "account_foreigner",
          "account_foreigner_postal_code",
          "account_local",
          "coowners",
          "company",
          "tax",
          "address"
        ],
        "title": "ShowAccountResource"
      },
      "ShowAgreementResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "active": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "site",
          "active",
          "name",
          "content",
          "products",
          "companies",
          "created_at",
          "updated_at"
        ],
        "title": "ShowAgreementResource"
      },
      "ShowAnalyzerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "analyzer_name": {
            "type": ["string", "null"]
          },
          "clear_contracts": {
            "type": "boolean"
          },
          "editable_commission": {
            "type": "boolean"
          },
          "predefined_commission": {
            "type": ["integer", "null"]
          },
          "min_total_amount": {
            "type": "number"
          },
          "future_profit": {
            "type": "boolean"
          },
          "auto_claim": {
            "type": "boolean"
          },
          "client_contract_folder": {
            "type": "string"
          },
          "contract_enablement_folder_name": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "sign_user": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "exclude_campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "legal_statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 0,
            "additionalItems": false
          },
          "analyzer_verifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "insurance_companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "api_folder_class": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 0,
            "additionalItems": false
          },
          "checked_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "contract_enablement_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "insurance_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 0,
            "additionalItems": false
          }
        },
        "required": [
          "id",
          "active",
          "analyzer_name",
          "clear_contracts",
          "editable_commission",
          "predefined_commission",
          "min_total_amount",
          "future_profit",
          "auto_claim",
          "client_contract_folder",
          "contract_enablement_folder_name",
          "company",
          "sign_user",
          "exclude_campaigns",
          "legal_statuses",
          "analyzer_verifiers",
          "insurance_companies",
          "contracts",
          "services",
          "api_folder_class",
          "checked_users",
          "contract_enablement_name",
          "insurance_types"
        ],
        "title": "ShowAnalyzerResource"
      },
      "ShowCampaignGroupResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumResource"
            }
          },
          "priority": {
            "type": "string"
          },
          "hex_color": {
            "type": ["string", "null"]
          }
        },
        "required": ["id", "name", "campaigns", "priority", "hex_color"],
        "title": "ShowCampaignGroupResource"
      },
      "ShowCarMakeResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "car_make": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "img": {
            "type": "string"
          },
          "img_src": {
            "type": "string"
          }
        },
        "required": ["id", "car_make", "img", "img_src"],
        "title": "ShowCarMakeResource"
      },
      "ShowClaimWireTransferResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "transfer_sender": {
            "type": "string"
          },
          "transfer_title": {
            "type": "string"
          },
          "transfer_bank_account_number": {
            "type": "string"
          },
          "receiver_bank_account_number": {
            "type": "string"
          },
          "transfer_amount": {
            "type": "string"
          },
          "transfer_date": {
            "type": "string"
          },
          "transfer_accounted_for_at": {
            "type": "string"
          },
          "additional_informations": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "claim_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimValueCwtResource"
            }
          },
          "can_rollback": {
            "type": "string"
          },
          "log": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "transfer_sender",
          "transfer_title",
          "transfer_bank_account_number",
          "receiver_bank_account_number",
          "transfer_amount",
          "transfer_date",
          "transfer_accounted_for_at",
          "additional_informations",
          "created_at",
          "claim_values",
          "can_rollback",
          "log"
        ],
        "title": "ShowClaimWireTransferResource"
      },
      "ShowInvoiceResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "invoice_date": {
            "type": ["string", "null"]
          },
          "payment_date": {
            "type": ["string", "null"]
          },
          "value": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "sell_date": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "seller": {
            "$ref": "#/components/schemas/SellerInvoiceResource"
          },
          "payer": {
            "$ref": "#/components/schemas/PayerInvoiceResource"
          },
          "billInfo": {
            "$ref": "#/components/schemas/BillInvoiceResource"
          }
        },
        "required": [
          "id",
          "number",
          "product",
          "service",
          "invoice_date",
          "payment_date",
          "value",
          "quantity",
          "sell_date",
          "currency",
          "seller",
          "payer",
          "billInfo"
        ],
        "title": "ShowInvoiceResource"
      },
      "ShowMassCommunicateResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "communicate_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserEnumResource"
          },
          "created_at": {
            "type": ["string", "null"]
          },
          "subject": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "sended_to": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "planned_at": {
            "type": ["string", "null"]
          },
          "stats": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatsResource"
              },
              {
                "type": "null"
              }
            ]
          },
          "crontab": {
            "type": "string"
          },
          "next_send": {
            "type": "string"
          },
          "repetitive_sending": {
            "type": "boolean"
          },
          "active": {
            "type": ["string", "null"]
          }
        },
        "required": [
          "id",
          "communicate_id",
          "type",
          "message",
          "user",
          "created_at",
          "subject",
          "content",
          "sended_to",
          "status",
          "planned_at",
          "stats",
          "crontab",
          "next_send",
          "repetitive_sending",
          "active"
        ],
        "title": "ShowMassCommunicateResource"
      },
      "ShowPortalDeliveryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "received_by": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "delivered_at": {
            "type": ["string", "null"]
          },
          "wps": {
            "type": "string"
          },
          "portal_case_id": {
            "type": "string"
          },
          "court": {
            "$ref": "#/components/schemas/DepartmentToSelectResource"
          },
          "court_from_json": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedPortalDocumentsDeliveryResource"
            }
          },
          "claim_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "received_by",
          "delivered_at",
          "wps",
          "portal_case_id",
          "court",
          "court_from_json",
          "signature",
          "documents",
          "claim_id"
        ],
        "title": "ShowPortalDeliveryResource"
      },
      "ShowPrintTemplateResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "sellable": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "copies": {
            "type": "integer"
          },
          "duplex": {
            "type": "integer"
          },
          "driver": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "label": {
                "type": "string"
              }
            },
            "required": ["value", "label"]
          },
          "printer": {
            "type": "string"
          },
          "print_template_lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrintTemplateListResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "scope",
          "sellable",
          "copies",
          "duplex",
          "driver",
          "printer",
          "print_template_lists"
        ],
        "title": "ShowPrintTemplateResource"
      },
      "ShowProductAdditionalFieldsResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "keys_mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeysMappingResource"
            }
          },
          "blacklisted_keys": {
            "type": "string"
          },
          "preview_lead_blacklist": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "keys_mapping",
          "blacklisted_keys",
          "preview_lead_blacklist"
        ],
        "title": "ShowProductAdditionalFieldsResource"
      },
      "StatsResource": {
        "type": "object",
        "properties": {
          "successes": {
            "type": "string"
          },
          "fails": {
            "type": "object",
            "properties": {
              "duplicates": {
                "type": "string"
              },
              "": {
                "type": "string"
              },
              "unknown_errors": {
                "type": "string"
              },
              "do_not_send_again_restrictions": {
                "type": "string"
              },
              "marketing_automation_errors": {
                "type": "string"
              }
            },
            "required": [
              "duplicates",
              null,
              "unknown_errors",
              null,
              "do_not_send_again_restrictions",
              "marketing_automation_errors"
            ]
          }
        },
        "required": ["successes", "fails"],
        "title": "StatsResource"
      },
      "StoreAgreementRequest": {
        "type": "object",
        "properties": {
          "project_site_id": {
            "type": ["integer", "null"]
          },
          "active": {
            "type": ["boolean", "null"]
          },
          "name": {
            "type": "string",
            "maxLength": 191
          },
          "content": {
            "type": "string",
            "maxLength": 65535
          },
          "products": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "companies": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name", "content"],
        "title": "StoreAgreementRequest"
      },
      "StoreAnalyzerRequest": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "integer"
          },
          "sign_user_id": {
            "type": ["integer", "null"]
          },
          "active": {
            "type": "boolean"
          },
          "exclude_campaigns": {
            "type": ["integer", "null"]
          },
          "predefined_commission": {
            "type": ["integer", "null"]
          },
          "editable_commission": {
            "type": "boolean"
          },
          "legal_statuses": {
            "type": ["string", "null"]
          },
          "analyzer_verifiers": {
            "type": ["integer", "null"]
          },
          "exclude_message": {
            "type": ["integer", "null"]
          },
          "client_contract_folder": {
            "type": ["string", "null"]
          },
          "contract_enablement_name": {
            "type": ["string", "null"]
          },
          "checked_users": {
            "type": ["string", "null"]
          },
          "insurance_types": {
            "type": ["string", "null"]
          },
          "analyzer_name": {
            "type": ["string", "null"]
          },
          "min_total_amount": {
            "type": "number"
          },
          "api_folder_class": {
            "type": ["string", "null"]
          },
          "clear_contracts": {
            "type": "boolean"
          },
          "future_profit": {
            "type": "boolean"
          },
          "auto_claim": {
            "type": "boolean"
          },
          "insurance_companies": {
            "type": ["integer", "null"]
          },
          "services": {
            "type": ["integer", "null"]
          },
          "contracts": {
            "type": ["integer", "null"]
          }
        },
        "required": [
          "company_id",
          "active",
          "editable_commission",
          "min_total_amount",
          "clear_contracts",
          "future_profit",
          "auto_claim"
        ],
        "title": "StoreAnalyzerRequest"
      },
      "StoreAttachmentDirectoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lead_id": {
            "type": "number"
          },
          "parent_id": {
            "type": ["number", "null"]
          }
        },
        "required": ["name", "lead_id"],
        "title": "StoreAttachmentDirectoryRequest"
      },
      "StoreAttachmentTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "english_name": {
            "type": ["string", "null"]
          },
          "ocr": {
            "type": ["integer", "null"],
            "enum": ["0", "1"]
          },
          "services": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          },
          "projects": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name"],
        "title": "StoreAttachmentTypeRequest"
      },
      "StoreBlacklistRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "block_type": {
            "type": ["string", "null"]
          },
          "sms_only": {
            "type": ["string", "null"]
          },
          "request_delete_data": {
            "type": ["boolean", "null"]
          },
          "stop_marketing_only": {
            "type": ["boolean", "null"]
          }
        },
        "required": ["value", "description"],
        "title": "StoreBlacklistRequest"
      },
      "StoreCampaignGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "campaigns": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "type": ["integer", "null"]
          },
          "hex_color": {
            "type": ["string", "null"]
          }
        },
        "required": ["name"],
        "title": "StoreCampaignGroupRequest"
      },
      "StoreCarMakeLogoRequest": {
        "type": "object",
        "properties": {
          "img": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": ["img"],
        "title": "StoreCarMakeLogoRequest"
      },
      "StoreCarMakeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "img": {
            "type": ["string", "null"],
            "format": "binary"
          }
        },
        "required": ["name"],
        "title": "StoreCarMakeRequest"
      },
      "StoreCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "site_id": {
            "type": "integer"
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "archived": {
            "type": ["boolean", "null"]
          }
        },
        "required": ["name", "site_id"],
        "title": "StoreCategoryRequest"
      },
      "StoreCcCampaignRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 150
          },
          "project_id": {
            "type": ["integer", "null"]
          },
          "active": {
            "type": ["integer", "null"]
          },
          "description": {
            "type": ["string", "null"],
            "maxLength": 150
          },
          "cti_campaign_id": {
            "type": ["integer", "null"]
          },
          "cti_pump_prio": {
            "type": ["integer", "null"]
          },
          "cti_pump_count": {
            "type": ["integer", "null"]
          },
          "cti_pump_crontab": {
            "type": ["string", "null"]
          },
          "block_status": {
            "type": ["integer", "null"]
          },
          "update_status": {
            "type": ["string", "null"],
            "enum": ["1", "2", "3"]
          }
        },
        "required": ["name"],
        "title": "StoreCcCampaignRequest"
      },
      "StoreCcStatusRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "cc_campaign_id": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          }
        },
        "required": ["name", "cc_campaign_id", "active", "type"],
        "title": "StoreCcStatusRequest"
      },
      "StoreCcTriggerRequest": {
        "type": "object",
        "properties": {
          "cc_campaign_id": {
            "type": "integer"
          },
          "description": {
            "type": ["string", "null"],
            "maxLength": 150
          },
          "sql_query": {
            "type": "string"
          },
          "trigger_class": {
            "type": ["string", "null"],
            "maxLength": 150
          }
        },
        "required": ["cc_campaign_id", "sql_query"],
        "title": "StoreCcTriggerRequest"
      },
      "StoreConsultantRequest": {
        "type": "object",
        "properties": {
          "consultant": {
            "type": "string"
          },
          "consultant_title": {
            "type": ["string", "null"]
          },
          "message": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "footer": {
            "type": ["string", "null"]
          },
          "footer_class": {
            "type": ["string", "null"]
          },
          "email_sender": {
            "type": "string"
          },
          "email_from": {
            "type": "string",
            "format": "email"
          },
          "marketing_email_subject": {
            "type": ["string", "null"]
          },
          "sms_sender": {
            "type": "string"
          },
          "company_address": {
            "type": ["string", "null"]
          },
          "display_logo": {
            "type": ["boolean", "null"]
          },
          "display_company": {
            "type": ["boolean", "null"]
          },
          "display_email": {
            "type": ["boolean", "null"]
          }
        },
        "required": ["consultant", "email_sender", "email_from", "sms_sender"],
        "title": "StoreConsultantRequest"
      },
      "StorePrintTemplateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "sellable": {
            "type": "string"
          },
          "copies": {
            "type": "integer"
          },
          "duplex": {
            "type": "boolean"
          },
          "driver": {
            "type": "string"
          },
          "printer": {
            "type": "string"
          },
          "print_template_lists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "copies": {
                  "type": "integer"
                },
                "order": {
                  "type": "integer"
                },
                "printable_id": {
                  "type": ["integer", "null"]
                },
                "printable_type": {
                  "type": ["string", "null"]
                },
                "folder_name": {
                  "type": ["string", "null"]
                },
                "pages": {
                  "type": ["string", "null"]
                },
                "scale": {
                  "type": ["integer", "null"],
                  "minimum": 20,
                  "maximum": 200
                }
              },
              "required": ["copies", "order"]
            }
          }
        },
        "required": [
          "name",
          "scope",
          "sellable",
          "copies",
          "duplex",
          "driver",
          "printer",
          "print_template_lists"
        ],
        "title": "StorePrintTemplateRequest"
      },
      "StoreProductRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "category_id": {
            "type": "integer"
          },
          "mails": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "statuses": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["active", "archived", "name", "category_id"],
        "title": "StoreProductRequest"
      },
      "StoreRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          },
          "permissions": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          },
          "routes": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          }
        },
        "required": ["name"],
        "title": "StoreRoleRequest"
      },
      "StoreSurveyRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "project": {
            "type": "integer"
          },
          "campaign": {
            "type": ["integer", "null"]
          },
          "stage": {
            "type": ["string", "null"],
            "enum": [
              "App\\Models\\Lead",
              "App\\Models\\Opportunity",
              "App\\Models\\Purchase",
              "App\\Models\\Claim"
            ]
          },
          "product": {
            "type": ["integer", "null"]
          },
          "questions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "input",
                    "textarea",
                    "select",
                    "multiselect",
                    "radio",
                    "checkbox",
                    "date",
                    "datetime"
                  ]
                },
                "content": {
                  "type": "string"
                },
                "options": {
                  "type": ["array", "null"],
                  "items": {
                    "type": ["string", "null"]
                  }
                }
              },
              "required": ["type", "content"]
            }
          }
        },
        "required": ["active", "name", "project", "questions"],
        "title": "StoreSurveyRequest"
      },
      "StoreTodoTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 191
          },
          "linkable_type_id": {
            "type": ["string", "null"],
            "enum": ["Lead", "Opportunity", "Purchase", "Claim", "Blacklist"]
          },
          "linkable_id": {
            "type": ["string", "null"]
          },
          "desc": {
            "type": ["string", "null"]
          },
          "assigned_id": {
            "type": ["integer", "null"]
          },
          "deadline": {
            "type": ["string", "null"]
          },
          "team_id": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          },
          "tags": {
            "type": ["array", "null"],
            "items": {
              "type": ["string", "null"]
            }
          },
          "attachments": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          }
        },
        "required": ["title"],
        "title": "StoreTodoTaskRequest"
      },
      "StoreUpdateNotificationDefinitionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": ["string", "null"]
          },
          "must_be_confirmed": {
            "type": "boolean"
          },
          "read_by_one_from_team": {
            "type": "boolean"
          },
          "teams": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "users": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "must_be_confirmed", "read_by_one_from_team"],
        "title": "StoreUpdateNotificationDefinitionRequest"
      },
      "StoreUpdateProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cc_phone": {
            "type": ["string", "null"]
          },
          "consultant_id": {
            "type": ["integer", "null"]
          },
          "lead_price": {
            "type": ["number", "null"]
          },
          "sell_limit": {
            "type": ["integer", "null"]
          },
          "free_leads": {
            "type": ["integer", "null"]
          },
          "gmail_labels": {
            "type": ["string", "null"]
          },
          "check_partners": {
            "type": ["boolean", "null"]
          },
          "archived": {
            "type": ["boolean", "null"]
          },
          "attachment_types": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          }
        },
        "required": ["name"],
        "title": "StoreUpdateProjectRequest"
      },
      "StreetResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          }
        },
        "required": ["label", "value"],
        "title": "StreetResource"
      },
      "StreetStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "city_id": {
            "type": "string"
          }
        },
        "required": ["name", "city_id"],
        "title": "StreetStoreRequest"
      },
      "StreetUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "city_id": {
            "type": "string"
          }
        },
        "required": ["name", "city_id"],
        "title": "StreetUpdateRequest"
      },
      "SurveyIndexResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "questions": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "project": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "campaign": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "stage": {
            "type": ["string", "null"]
          },
          "product": {
            "$ref": "#/components/schemas/EnumResource"
          }
        },
        "required": [
          "id",
          "active",
          "name",
          "questions",
          "project",
          "campaign",
          "stage",
          "product"
        ],
        "title": "SurveyIndexResource"
      },
      "TagResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["id", "value", "color", "label"],
        "title": "TagResource"
      },
      "TagStoreRequest": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": ["color", "label"],
        "title": "TagStoreRequest"
      },
      "TaxAccountResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tax_name": {
            "type": "string"
          },
          "tax_street": {
            "type": "string"
          },
          "tax_nr_house": {
            "type": "string"
          },
          "tax_nr_apartment": {
            "type": "string"
          },
          "tax_city": {
            "type": "string"
          },
          "tax_postal_code": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tax_name",
          "tax_street",
          "tax_nr_house",
          "tax_nr_apartment",
          "tax_city",
          "tax_postal_code"
        ],
        "title": "TaxAccountResource"
      },
      "TaxShowResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "office": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "nr_house": {
            "type": "string"
          },
          "nr_apartment": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "office",
          "street",
          "postal_code",
          "city",
          "code",
          "nr_house",
          "nr_apartment"
        ],
        "title": "TaxShowResource"
      },
      "TaxStoreRequest": {
        "type": "object",
        "properties": {
          "office": {
            "type": ["string", "null"]
          },
          "street": {
            "type": ["string", "null"]
          },
          "postal_code": {
            "type": ["string", "null"]
          },
          "city": {
            "type": ["string", "null"]
          },
          "code": {
            "type": ["string", "null"]
          },
          "nr_house": {
            "type": ["string", "null"]
          },
          "nr_apartment": {
            "type": ["string", "null"]
          }
        },
        "title": "TaxStoreRequest"
      },
      "TaxUpdateTaxInstitutionsRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": ["file"],
        "title": "TaxUpdateTaxInstitutionsRequest"
      },
      "TeamResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/EnumResource"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEnumResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "product",
          "users"
        ],
        "title": "TeamResource"
      },
      "TeamStoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          },
          "product_id": {
            "type": ["integer", "null"]
          },
          "users": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name"],
        "title": "TeamStoreRequest"
      },
      "TeamUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          },
          "product_id": {
            "type": ["integer", "null"]
          },
          "users": {
            "type": ["array", "null"],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": ["name"],
        "title": "TeamUpdateRequest"
      },
      "TestSendCommunicateRequest": {
        "type": "object",
        "properties": {
          "lead_id": {
            "type": "integer"
          }
        },
        "required": ["lead_id"],
        "title": "TestSendCommunicateRequest"
      },
      "TodoTaskCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "required": ["content"],
        "title": "TodoTaskCommentRequest"
      },
      "TodoTaskStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["0", "5", "10", "20", "30"]
          }
        },
        "required": ["status"],
        "title": "TodoTaskStatusRequest"
      },
      "UpdateAdditionalFieldProductRequest": {
        "type": "object",
        "properties": {
          "blacklisted_keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preview_lead_blacklist": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keys_mapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mapping_key": {
                  "type": "string"
                },
                "new_name_key": {
                  "type": ["string", "null"]
                }
              }
            }
          }
        },
        "title": "UpdateAdditionalFieldProductRequest"
      },
      "UpdateAttachmentRequest": {
        "type": "object",
        "properties": {
          "original_name": {
            "type": "string"
          },
          "attachment_type_id": {
            "type": ["integer", "null"]
          },
          "password": {
            "type": ["string", "null"]
          }
        },
        "required": ["original_name"],
        "title": "UpdateAttachmentRequest"
      },
      "UpdateBlacklistRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "block_type": {
            "type": ["string", "null"]
          },
          "sms_only": {
            "type": ["string", "null"]
          },
          "request_delete_data": {
            "type": ["boolean", "null"]
          },
          "stop_marketing_only": {
            "type": ["boolean", "null"]
          }
        },
        "required": ["value", "description"],
        "title": "UpdateBlacklistRequest"
      },
      "UpdateCcCampaignRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 150
          },
          "project_id": {
            "type": ["integer", "null"]
          },
          "active": {
            "type": ["integer", "null"]
          },
          "description": {
            "type": ["string", "null"],
            "maxLength": 150
          },
          "cti_campaign_id": {
            "type": ["integer", "null"]
          },
          "cti_pump_prio": {
            "type": ["integer", "null"]
          },
          "cti_pump_count": {
            "type": ["integer", "null"]
          },
          "cti_pump_crontab": {
            "type": ["string", "null"]
          },
          "block_status": {
            "type": ["integer", "null"]
          },
          "update_status": {
            "type": ["string", "null"],
            "enum": ["1", "2", "3"]
          }
        },
        "required": ["name"],
        "title": "UpdateCcCampaignRequest"
      },
      "UpdateCcStatusRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50
          },
          "cc_campaign_id": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          }
        },
        "required": ["name", "cc_campaign_id", "active", "type"],
        "title": "UpdateCcStatusRequest"
      },
      "UpdateCcTriggerRequest": {
        "type": "object",
        "properties": {
          "cc_campaign_id": {
            "type": "integer"
          },
          "description": {
            "type": ["string", "null"],
            "maxLength": 150
          },
          "sql_query": {
            "type": "string"
          },
          "trigger_class": {
            "type": ["string", "null"],
            "maxLength": 150
          }
        },
        "required": ["cc_campaign_id", "sql_query"],
        "title": "UpdateCcTriggerRequest"
      },
      "UpdateConsultantRequest": {
        "type": "object",
        "properties": {
          "consultant": {
            "type": "string"
          },
          "consultant_title": {
            "type": ["string", "null"]
          },
          "message": {
            "type": ["string", "null"]
          },
          "phone": {
            "type": ["string", "null"]
          },
          "footer": {
            "type": ["string", "null"]
          },
          "footer_class": {
            "type": ["string", "null"]
          },
          "email_sender": {
            "type": "string"
          },
          "email_from": {
            "type": "string",
            "format": "email"
          },
          "marketing_email_subject": {
            "type": ["string", "null"]
          },
          "sms_sender": {
            "type": "string"
          },
          "company_address": {
            "type": ["string", "null"]
          },
          "display_logo": {
            "type": ["boolean", "null"]
          },
          "display_company": {
            "type": ["boolean", "null"]
          },
          "display_email": {
            "type": ["boolean", "null"]
          }
        },
        "required": ["consultant", "email_sender", "email_from", "sms_sender"],
        "title": "UpdateConsultantRequest"
      },
      "UpdateIncomesAndCostsRequest": {
        "type": "object",
        "properties": {
          "service_id": {
            "type": "integer"
          },
          "opportunity_id": {
            "type": ["integer", "null"]
          },
          "purchase_id": {
            "type": "integer"
          },
          "claim_id": {
            "type": ["integer", "null"]
          },
          "claim_value_id": {
            "type": ["integer", "null"]
          },
          "filled_contract_id": {
            "type": ["integer", "null"]
          },
          "attachment_id": {
            "type": ["integer", "null"]
          },
          "parent_id": {
            "type": ["integer", "null"]
          },
          "future_profit": {
            "type": "boolean"
          },
          "corrected": {
            "type": ["boolean", "null"]
          },
          "value_brutto": {
            "type": "string"
          },
          "value_netto": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["1", "2"]
          },
          "subtype": {
            "type": "string",
            "enum": [
              "100",
              "101",
              "102",
              "103",
              "104",
              "105",
              "106",
              "107",
              "108",
              "109",
              "110",
              "111",
              "112",
              "113",
              "114",
              "115",
              "116",
              "117",
              "118",
              "119",
              "120",
              "121",
              "122",
              "123",
              "124",
              "125",
              "126",
              "127",
              "128",
              "129",
              "130",
              "131",
              "198",
              "199",
              "200",
              "201",
              "202",
              "203",
              "204",
              "205",
              "206",
              "207",
              "208",
              "210",
              "211",
              "212",
              "213",
              "214",
              "215",
              "216",
              "217",
              "218",
              "219",
              "220",
              "221",
              "222",
              "223",
              "224",
              "225",
              "226",
              "227",
              "228",
              "229",
              "230"
            ]
          },
          "canceled_type": {
            "type": ["string", "null"],
            "enum": ["301", "302", "303"]
          },
          "contract_signed_at": {
            "type": "string"
          },
          "locked_at": {
            "type": ["string", "null"]
          },
          "paid_at": {
            "type": ["string", "null"]
          },
          "accounted_for_at": {
            "type": ["string", "null"]
          },
          "canceled_at": {
            "type": "string"
          }
        },
        "required": [
          "service_id",
          "purchase_id",
          "future_profit",
          "value_brutto",
          "value_netto",
          "type",
          "subtype"
        ],
        "title": "UpdateIncomesAndCostsRequest"
      },
      "UpdateLoggedUserRequest": {
        "type": "object",
        "properties": {
          "lang": {
            "type": ["string", "null"],
            "enum": ["pl", "en"]
          },
          "vacation": {
            "type": ["boolean", "null"]
          },
          "name": {
            "type": "string",
            "maxLength": 191
          },
          "description": {
            "type": ["string", "null"]
          },
          "occupation": {
            "type": ["string", "null"],
            "maxLength": 500
          }
        },
        "required": ["name"],
        "title": "UpdateLoggedUserRequest"
      },
      "UpdatePortalCaseRequest": {
        "type": "object",
        "properties": {
          "claim_id": {
            "type": ["integer", "null"]
          }
        },
        "title": "UpdatePortalCaseRequest"
      },
      "UpdatePortalDeliveryRequest": {
        "type": "object",
        "properties": {
          "claim_id": {
            "type": "integer"
          }
        },
        "required": ["claim_id"],
        "title": "UpdatePortalDeliveryRequest"
      },
      "UpdatePrintTemplateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "sellable": {
            "type": "string"
          },
          "copies": {
            "type": "integer"
          },
          "duplex": {
            "type": "boolean"
          },
          "driver": {
            "type": "string"
          },
          "printer": {
            "type": "string"
          },
          "print_template_lists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": ["integer", "null"]
                },
                "copies": {
                  "type": "integer"
                },
                "order": {
                  "type": "integer"
                },
                "printable_id": {
                  "type": ["integer", "null"]
                },
                "printable_type": {
                  "type": ["string", "null"]
                },
                "folder_name": {
                  "type": ["string", "null"]
                },
                "pages": {
                  "type": ["string", "null"]
                },
                "scale": {
                  "type": ["integer", "null"],
                  "minimum": 20,
                  "maximum": 200
                }
              },
              "required": ["copies", "order"]
            }
          }
        },
        "required": [
          "name",
          "scope",
          "sellable",
          "copies",
          "duplex",
          "driver",
          "printer",
          "print_template_lists"
        ],
        "title": "UpdatePrintTemplateRequest"
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "category_id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "mails": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          },
          "statuses": {
            "type": ["array", "null"],
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["active", "archived", "category_id", "name"],
        "title": "UpdateProductRequest"
      },
      "UpdateTodoTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 191
          },
          "linkable_type_id": {
            "type": ["string", "null"],
            "enum": ["Lead", "Opportunity", "Purchase", "Claim", "Blacklist"]
          },
          "linkable_id": {
            "type": ["string", "null"]
          },
          "desc": {
            "type": ["string", "null"]
          },
          "assigned_id": {
            "type": ["integer", "null"]
          },
          "deadline": {
            "type": ["string", "null"]
          },
          "status_id": {
            "type": "integer",
            "enum": ["0", "5", "10", "20", "30"]
          },
          "team_id": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          },
          "tags": {
            "type": ["array", "null"],
            "items": {
              "type": ["string", "null"]
            }
          },
          "attachments": {
            "type": ["array", "null"],
            "items": {
              "type": ["integer", "null"]
            }
          },
          "change_creator": {
            "type": "string",
            "default": false
          }
        },
        "required": ["title", "status_id"],
        "title": "UpdateTodoTaskRequest"
      },
      "UploadAttachmentRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "attachment_type_id": {
            "type": ["string", "null"]
          },
          "directory": {
            "type": ["string", "null"]
          }
        },
        "required": ["file"],
        "title": "UploadAttachmentRequest"
      },
      "UploadAvatarLoggedUserRequest": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": ["image"],
        "title": "UploadAvatarLoggedUserRequest"
      },
      "UrlShortenerHostResource": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["label", "value"],
        "title": "UrlShortenerHostResource"
      },
      "UrlShortenerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "short_url": {
            "type": "string"
          },
          "target_url": {
            "type": ["string", "null"]
          },
          "hash": {
            "type": ["string", "null"]
          },
          "custom": {
            "type": "boolean"
          },
          "visits": {
            "type": "integer"
          },
          "created_at": {
            "type": "string"
          },
          "last_visited_at": {
            "type": "string"
          },
          "host": {
            "$ref": "#/components/schemas/UrlShortenerHostResource"
          }
        },
        "required": [
          "id",
          "short_url",
          "target_url",
          "hash",
          "custom",
          "visits",
          "created_at",
          "last_visited_at",
          "host"
        ],
        "title": "UrlShortenerResource"
      },
      "UrlShortenerStoreRequest": {
        "type": "object",
        "properties": {
          "target_url": {
            "type": "string",
            "format": "uri"
          },
          "host": {
            "type": ["string", "null"]
          },
          "custom": {
            "type": ["string", "null"]
          }
        },
        "required": ["target_url"],
        "title": "UrlShortenerStoreRequest"
      },
      "UserAnalyzerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 0,
            "additionalItems": false
          }
        },
        "required": ["id", "active", "email", "company", "folders"],
        "title": "UserAnalyzerResource"
      },
      "UserEnumResource": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["value", "label", "name"],
        "title": "UserEnumResource"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "enum": {
            "type": ["string", "null"]
          },
          "can_see_feedback": {
            "type": "integer"
          },
          "parent_id": {
            "type": ["integer", "null"]
          },
          "external_id": {
            "type": ["string", "null"]
          },
          "company_id": {
            "type": ["integer", "null"]
          },
          "active": {
            "type": "boolean"
          },
          "vacation": {
            "type": "integer"
          },
          "locked": {
            "type": "integer"
          },
          "autoread_notify": {
            "type": "integer"
          },
          "limitation_id": {
            "type": ["integer", "null"]
          },
          "name": {
            "type": "string"
          },
          "job_title": {
            "type": ["string", "null"]
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": ["string", "null"]
          },
          "pesel": {
            "type": ["string", "null"]
          },
          "cc_login": {
            "type": ["string", "null"]
          },
          "is_male": {
            "type": "integer"
          },
          "locale": {
            "type": ["string", "null"]
          },
          "description": {
            "type": ["string", "null"]
          },
          "occupation": {
            "type": ["string", "null"]
          },
          "json": {
            "type": ["string", "null"]
          },
          "force_permissions_change": {
            "type": "integer"
          },
          "facsimile_id": {
            "type": ["integer", "null"]
          },
          "lang": {
            "type": "string"
          },
          "lastlogin_at": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "deleted_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "image": {
            "type": ["string", "null"]
          },
          "password": {
            "type": "null"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResource"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResource"
            }
          }
        },
        "required": [
          "id",
          "enum",
          "can_see_feedback",
          "parent_id",
          "external_id",
          "company_id",
          "active",
          "vacation",
          "locked",
          "autoread_notify",
          "limitation_id",
          "name",
          "job_title",
          "email",
          "phone",
          "pesel",
          "cc_login",
          "is_male",
          "locale",
          "description",
          "occupation",
          "json",
          "force_permissions_change",
          "facsimile_id",
          "lang",
          "lastlogin_at",
          "created_at",
          "updated_at",
          "deleted_at",
          "image",
          "password",
          "permissions",
          "roles"
        ],
        "title": "UserResource"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": ["message", "errors"]
            }
          }
        }
      },
      "AuthorizationException": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      }
    }
  }
}
